# Generated by Django 5.0.6 on 2024-07-07 14:34
import django.db.models.deletion
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):
    dependencies = [
        ("blog", "0016_alter_blogcategory_slug_alter_blogpost_image_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="blogcomment",
            name="likes",
            field=models.ManyToManyField(
                blank=True, related_name="liked_blog_comments", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AlterField(
            model_name="blogcomment",
            name="post",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="comments",
                to="blog.blogpost",
            ),
        ),
        migrations.AlterField(
            model_name="blogcomment",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="blog_comments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="blogpost",
            name="author",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="blog_posts",
                to="blog.blogauthor",
            ),
        ),
        migrations.AlterField(
            model_name="blogpost",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="blog_posts",
                to="blog.blogcategory",
            ),
        ),
        migrations.AlterField(
            model_name="blogpost",
            name="tags",
            field=models.ManyToManyField(blank=True, related_name="blog_posts", to="blog.blogtag"),
        ),
    ]
