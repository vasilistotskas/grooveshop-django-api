[tool.poetry]
name = "grooveshop-django-api"
version = "0.182.0"
description = "GrooveShop Django Backend"
license = "MIT"
readme = ["README.md"]
repository = "https://github.com/vasilistotskas/grooveshop-django-api"
authors = ["Vasilis Totskas"]
packages = [
    { include = "*", from = "." },
]

[build-system]
requires = ["poetry>=1.8.4"]
build-backend = "poetry.masonry.api"

[tool.poetry.dependencies]
asgiref = "3.8.1"
boto3 = "1.35.71"
python = ">=3.11,<4.0.0"
charset_normalizer = "3.4.0"
chardet = "5.2.0"
channels = "4.2.0"
channels-redis = "4.2.1"
click = "8.1.7"
cryptography = "44.0.0"
django = "5.1.3"
django-admin-thumbnails = "0.2.9"
django-allauth = "65.2.0"
django-csp = "4.0b2"
django-dbbackup = "4.2.1"
django-extra-settings = "0.12.0"
django-celery-beat = "2.7.0"
django-celery-results = "2.5.1"
django-cors-headers = "4.6.0"
django-simple-history = "3.7.0"
django-filter = "24.3"
django-js-asset = "2.2.0"
django-money = "3.5.3"
django-mptt = "0.16.0"
django-parler = "2.3.0"
django-parler-rest = "2.2.0"
django-phonenumber-field = "8.0.0"
django-rosetta = "0.10.1"
django-rest-knox = "5.0.2"
django-storages = "1.14.4"
django-tinymce = "4.1.0"
djangoql = "*"
djangorestframework = "3.15.2"
djangorestframework-camel-case = "1.4.2"
dotty-dict = "1.3.1"
drf-spectacular = "0.27.2"
fido2 = "1.2.0"
flower = "2.0.1"
gunicorn = "23.0.0"
hiredis = "3.0.0"
httptools = "0.6.4"
httpx = "0.27.2"
importlib-resources = "6.4.5"
measurement = "3.2.2"
meilisearch = "0.32.0"
multidict = "6.1.0"
phonenumbers = "8.13.50"
pillow = "11.0.0"
psycopg = { version = "3.2.3", extras = ["binary", "pool"] }
pyjwt = "2.10.1"
python-dotenv = "1.0.1"
pydantic = "2.10.2"
qrcode = "8.0"
rich = "13.9.4"
urllib3 = "2.2.3"
uvicorn = "0.32.1"
uvloop = "0.21.0"
websockets = "14.1"
sentry-sdk = "*"

[tool.poetry.dev-dependencies]
bpython = "*"
black = "24.10.0"
coverage = "7.6.8"
djangorestframework-stubs = "3.15.1"
django-debug-toolbar = "4.4.6"
django-extensions = "*"
django-stubs = "5.1.1"
Faker = "33.1.0"
factory-boy = "3.3.1"
flake8 = "7.1.1"
gitpython = "3.1.43"
ipython = "*"
jinja2 = "3.1.4"
pre-commit = "4.0.1"
pudb = "*"
pip-upgrader = "1.4.15"
pylint = "3.3.1"
pytest = "8.3.3"
pytest-asyncio = "0.24.0"
pytest-cov = "*"
python-semantic-release = "9.14.0"
pytest-django = "4.9.0"
python-gitlab = "4.13.0"
werkzeug = "*"

[tool.poetry.dependencies.celery]
version = ">=5.4.0,<6.0.0"
extras = ["redis"]

[tool.coverage.paths]
source = ["*"]

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/management/*",
    "*/manage.py",
    "*/setup.py",
    "asgi/gunicorn_worker.py",
    "core/storages.py",
    "*/wsgi/*",
]
source = ["*"]
relative_files = true

[tool.coverage.report]
precision = 2
skip_covered = true
fail_under = 50
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "return NotImplemented",
    "if TYPE_CHECKING:",
    "if getattr(self, 'swagger_fake_view', False):",
]

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["setup.py:__version__"]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"
commit_message = 'chore(release): release version {version} [skip ci]'

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*", "dist_build/*"]

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "settings"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "settings"

[tool.black]
line-length = 108
