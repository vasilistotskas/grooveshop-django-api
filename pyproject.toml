[tool.poetry]
name = "grooveshop-django-api"
version = "0.144.0"
description = "GrooveShop Django Backend"
license = "MIT"
readme = ["README.md"]
repository = "https://github.com/vasilistotskas/grooveshop-django-api"
authors = ["Vasilis Totskas"]
packages = [
    { include = "*", from = "." },
]

[build-system]
requires = ["poetry>=1.8.3"]
build-backend = "poetry.masonry.api"

[tool.poetry.dependencies]
adrf = "0.1.7"
asgiref = "3.8.1"
boto3 = "1.35.2"
python = ">=3.10.13,<4.0.0"
charset_normalizer = "3.3.2"
chardet = "5.2.0"
django = "5.0.8"
django-admin-thumbnails = "0.2.9"
django-allauth = "64.1.0"
django-dbbackup = "4.1.0"
django-extra-settings = "0.12.0"
django-celery-beat = "2.6.0"
django-celery-results = "2.5.1"
django-cors-headers = "4.4.0"
django-simple-history = "3.7.0"
django-filter = "24.3"
django-js-asset = "2.2.0"
django-money = "3.5.3"
django-mptt = "0.16.0"
django-parler = "2.3.0"
django-parler-rest = "2.2.0"
django-phonenumber-field = "8.0.0"
django-rosetta = "0.10.0"
django-rest-knox = "5.0.1"
django-storages = "1.14.4"
django-tinymce = "4.1.0"
djangoql = "*"
djangorestframework = "3.15.2"
djangorestframework-stubs = "3.15.0"
djangorestframework-camel-case = "1.4.2"
dotty-dict = "1.3.1"
drf-spectacular = "0.27.2"
Faker = "27.0.0"
factory-boy = "3.3.1"
fido2 = "1.1.3"
flower = "2.0.1"
gunicorn = "23.0.0"
httptools = "0.6.1"
importlib-resources = "6.4.3"
measurement = "3.2.2"
multidict = "6.0.5"
phonenumbers = "8.13.43"
pillow = "10.4.0"
psycopg = "3.2.1"
psycopg-binary = "3.2.1"
psycopg-pool = "3.2.2"
pyjwt = "2.9.0"
python-dotenv = "1.0.1"
python-semantic-release = "9.8.7"
pydantic = "2.8.2"
qrcode = "7.4.2"
rich = "13.7.1"
urllib3 = "2.2.2"
uvicorn = "0.30.6"
uvloop = "0.19.0"
websockets = "13.0"
whitenoise = "6.7.0"

[tool.poetry.dev-dependencies]
bpython = "*"
black = "24.8.0"
channels = "4.1.0"
channels-redis = "4.2.0"
click = "8.1.7"
coverage = "7.6.1"
cryptography = "43.0.0"
django-browser-reload = "1.15.0"
django-debug-toolbar = "4.4.6"
django-extensions = "*"
django-stubs = "5.0.4"
flake8 = "7.1.1"
gitpython = "3.1.43"
hiredis = "3.0.0"
ipython = "*"
jinja2 = "3.1.4"
pre-commit = "3.8.0"
pudb = "*"
pydocstyle = "6.3.0"
pylint = "3.2.6"
pytest = "8.3.2"
pytest-asyncio = "0.23.8"
pytest-cov = "*"
pytest-django = "4.8.0"
python-gitlab = "4.9.0"
sentry-sdk = "*"
shortuuid = "*"
unittest-xml-reporting = "*"
werkzeug = "*"

[tool.poetry.dependencies.celery]
version = ">=5.4.0,<6.0.0"
extras = ["redis"]

[tool.coverage.paths]
source = ["*"]

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/management/*",
    "*/manage.py",
    "*/setup.py",
    "asgi/gunicorn_worker.py",
    "core/storages.py",
    "*/wsgi/*",
]
source = ["*"]
relative_files = true

[tool.coverage.report]
precision = 2
skip_covered = true
fail_under = 50
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "return NotImplemented",
    "if TYPE_CHECKING:",
    "if getattr(self, 'swagger_fake_view', False):",
]

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = ["setup.py:__version__"]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"
commit_message = 'chore(release): release version {version} [skip ci]'

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*", "dist_build/*"]

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"

[tool.pydocstyle]
inherit = false
match-dir = "^(?!migrations|node_modules|static|templates|venv).*$"
ignore = ["E203", "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D203", "D213", "D407", "D202"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "settings"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]

[tool.mypy]
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "settings"

[tool.black]
line-length = 120
