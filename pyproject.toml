[project]
version = "1.26.0"
name = "grooveshop-django-api"
authors = [
  { name = "Vasilis Totskas", email = "vassilistotskas@msn.com" }
]
description = "GrooveShop Django Backend"
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
classifiers = [
    "Framework :: Django",
    "Programming Language :: Python :: 3",
]
dependencies = [
  "asgiref==3.9.1",
  "boto3==1.40.35",
  "charset_normalizer==3.4.3",
  "channels[daphne]==4.3.1",
  "channels-redis==4.3.0",
  "cryptography==46.0.1",
  "django==5.2.6",
  "django-admin-thumbnails==0.2.9",
  "django-allauth==65.11.2",
  "django-csp==4.0",
  "django-extra-settings==0.14.1",
  "django-celery-beat==2.8.1",
  "django-celery-results==2.6.0",
  "django-cors-headers==4.9.0",
  "django-simple-history==3.10.1",
  "django-filter==25.1",
  "django-unfold==0.65.0",
  "django-money==3.5.4",
  "django-mptt==0.18.0",
  "django-parler==2.3.0",
  "django-parler-rest==2.2.0",
  "django-phonenumber-field==8.1.0",
  "django-rosetta==0.10.2",
  "django-rest-knox==5.0.2",
  "django-storages==1.14.6",
  "django-tinymce==4.1.0",
  "djangorestframework==3.16.1",
  "djangorestframework-camel-case==1.4.2",
  "drf-spectacular==0.28.0",
  "fido2==2.0.0",
  "flower==2.0.1",
  "gunicorn==23.0.0",
  "importlib-resources==6.5.2",
  "measurement==3.2.2",
  "meilisearch==0.37.0",
  "phonenumbers==9.0.14",
  "pillow==11.3.0",
  "psycopg[binary,pool] == 3.2.10",
  "python-dotenv==1.1.1",
  "qrcode==8.2",
  "urllib3==2.5.0",
  "uvicorn==0.36.0",
  "celery[redis] >=5.5.3,<6.0.0",
  "disposable-email-domains==0.0.137",
  "django-stubs-ext==5.2.5",
  "twisted[http2,tls]==25.5.0",
]

[project.urls]
repository = "https://github.com/vasilistotskas/grooveshop-django-api"

# ─────────────────────────────────────────────────────────
# Dev (and other) dependency groups
# ─────────────────────────────────────────────────────────
[dependency-groups]
dev = [
    "coverage[toml]==7.10.6",
    "djangorestframework-stubs==3.16.3",
    "django-debug-toolbar==6.0.0",
    "django-stubs==5.2.5",
    "Faker==37.8.0",
    "factory-boy==3.3.3",
    "gitpython==3.1.45",
    "types-setuptools==80.9.0.20250822",
    "pre-commit==4.3.0",
    "pip-upgrader==1.4.15",
    "pylint==3.3.8",
    "pyjwt==2.10.1",
    "pytest==8.4.2",
    "pytest-asyncio==1.2.0",
    "pytest-django==4.11.1",
    "pytest-xdist==3.8.0",
    "pytest-timeout==2.4.0",
    "pytest-cov==7.0.0",
    "python-semantic-release==10.4.1",
    "ruff==0.13.1",
    "celery-stubs==0.1.3",
    "psutil==7.1.0",
]

# ─────────────────────────────────────────────────────────
# Setuptools configuration
# ─────────────────────────────────────────────────────────
[tool.setuptools.packages]
find = {}

# ─────────────────────────────────────────────────────────
# Coverage configuration
# ─────────────────────────────────────────────────────────
[tool.coverage.paths]
source = ["."]

[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/management/*",
    "*/factories/*",
    "*/manage.py",
    "*/factories.py",
    "*/setup.py",
    "asgi/gunicorn_worker.py",
    "core/storages.py",
    "*/wsgi/*",
]
source = ["*"]
relative_files = true

[tool.coverage.report]
precision = 2
skip_covered = true
fail_under = 50
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "raise AssertionError",
    "return NotImplemented",
    "if TYPE_CHECKING:",
    "if getattr(self, 'swagger_fake_view', False):",
    "if 0:",
    "if __name__ == .__main__.:",
    "def __repr__",
    "@(abstractmethod|abc.abstractmethod)",
    "if self.debug:",
    "if settings.DEBUG:",
]

[tool.coverage.html]
directory = "htmlcov"

# ─────────────────────────────────────────────────────────
# Coverage commands reference
# ─────────────────────────────────────────────────────────
# Run tests with coverage (sequential, recommended for coverage):
#   uv run pytest --cov=. --cov-report=term --cov-report=html --cov-config=pyproject.toml
#
# Run tests in parallel (fast, no coverage):
#   uv run pytest -n auto
#
# Run specific test with coverage:
#   uv run pytest tests/path/to/test.py --cov=module_name --cov-report=term
#
# Quick test run without coverage:
#   uv run pytest

# ─────────────────────────────────────────────────────────
# Semantic release configuration
# ─────────────────────────────────────────────────────────
[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = ["setup.py:__version__"]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install uv && uv build"
commit_message = "chore(release): release version {version} [skip ci]"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*", "dist_build/*"]

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"

# ─────────────────────────────────────────────────────────
# Pytest configuration
# ─────────────────────────────────────────────────────────
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "settings"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
env = [
    "MEILI_OFFLINE=True",
]
testpaths = ["tests"]
timeout = 600
addopts = "-vs --tb=short --maxfail=0"

# ─────────────────────────────────────────────────────────
# Django-stubs configuration
# ─────────────────────────────────────────────────────────
[tool.django-stubs]
django_settings_module = "settings"

# ─────────────────────────────────────────────────────────
# Ruff configuration
# ─────────────────────────────────────────────────────────
[tool.ruff]
line-length = 80
exclude = ["**/migrations/**"]

[tool.ruff.lint.pylint]
max-args = 6
