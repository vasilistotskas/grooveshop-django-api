openapi: 3.0.3
info:
  title: DeepWeb API
  version: 1.0.0
  description: DeepWeb API description
paths:
  /api/v1/active_users/active_users_count/:
    get:
      operationId: api_v1_active_users_active_users_count_retrieve
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/active_users/active_users_count{format}:
    get:
      operationId: api_v1_active_users_active_users_count_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/active_users/refresh_last_activity/:
    post:
      operationId: api_v1_active_users_refresh_last_activity_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/active_users/refresh_last_activity{format}:
    post:
      operationId: api_v1_active_users_refresh_last_activity_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/api-token-auth/:
    post:
      operationId: api_v1_api_token_auth_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/v1/blog/author/:
    get:
      operationId: api_v1_blog_author_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogAuthorList'
          description: ''
    post:
      operationId: api_v1_blog_author_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
  /api/v1/blog/author{format}:
    get:
      operationId: api_v1_blog_author_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogAuthorList'
          description: ''
    post:
      operationId: api_v1_blog_author_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
  /api/v1/blog/author/{id}/:
    get:
      operationId: api_v1_blog_author_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    put:
      operationId: api_v1_blog_author_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    patch:
      operationId: api_v1_blog_author_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    delete:
      operationId: api_v1_blog_author_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/author/{id}{format}:
    get:
      operationId: api_v1_blog_author_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    put:
      operationId: api_v1_blog_author_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    patch:
      operationId: api_v1_blog_author_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    delete:
      operationId: api_v1_blog_author_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/category/:
    get:
      operationId: api_v1_blog_category_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogCategoryList'
          description: ''
    post:
      operationId: api_v1_blog_category_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCategory'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
  /api/v1/blog/category{format}:
    get:
      operationId: api_v1_blog_category_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogCategoryList'
          description: ''
    post:
      operationId: api_v1_blog_category_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCategory'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
  /api/v1/blog/category/{id}/:
    get:
      operationId: api_v1_blog_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    put:
      operationId: api_v1_blog_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCategory'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    patch:
      operationId: api_v1_blog_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    delete:
      operationId: api_v1_blog_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/category/{id}{format}:
    get:
      operationId: api_v1_blog_category_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    put:
      operationId: api_v1_blog_category_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCategory'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    patch:
      operationId: api_v1_blog_category_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    delete:
      operationId: api_v1_blog_category_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/comment/:
    get:
      operationId: api_v1_blog_comment_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: post
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogCommentList'
          description: ''
    post:
      operationId: api_v1_blog_comment_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
  /api/v1/blog/comment{format}:
    get:
      operationId: api_v1_blog_comment_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: post
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogCommentList'
          description: ''
    post:
      operationId: api_v1_blog_comment_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
  /api/v1/blog/comment/{id}/:
    get:
      operationId: api_v1_blog_comment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    put:
      operationId: api_v1_blog_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    patch:
      operationId: api_v1_blog_comment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    delete:
      operationId: api_v1_blog_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/comment/{id}{format}:
    get:
      operationId: api_v1_blog_comment_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    put:
      operationId: api_v1_blog_comment_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    patch:
      operationId: api_v1_blog_comment_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    delete:
      operationId: api_v1_blog_comment_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/post/:
    get:
      operationId: api_v1_blog_post_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogPostList'
          description: ''
    post:
      operationId: api_v1_blog_post_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post{format}:
    get:
      operationId: api_v1_blog_post_formatted_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogPostList'
          description: ''
    post:
      operationId: api_v1_blog_post_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/:
    get:
      operationId: api_v1_blog_post_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    put:
      operationId: api_v1_blog_post_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    patch:
      operationId: api_v1_blog_post_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    delete:
      operationId: api_v1_blog_post_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/post/{id}{format}:
    get:
      operationId: api_v1_blog_post_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    put:
      operationId: api_v1_blog_post_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    patch:
      operationId: api_v1_blog_post_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    delete:
      operationId: api_v1_blog_post_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/post/{id}/update_likes/:
    post:
      operationId: api_v1_blog_post_update_likes_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/update_likes{format}:
    post:
      operationId: api_v1_blog_post_update_likes_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/update_view_count/:
    post:
      operationId: api_v1_blog_post_update_view_count_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/update_view_count{format}:
    post:
      operationId: api_v1_blog_post_update_view_count_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/tag/:
    get:
      operationId: api_v1_blog_tag_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogTagList'
          description: ''
    post:
      operationId: api_v1_blog_tag_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogTag'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
  /api/v1/blog/tag{format}:
    get:
      operationId: api_v1_blog_tag_formatted_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogTagList'
          description: ''
    post:
      operationId: api_v1_blog_tag_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogTag'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
  /api/v1/blog/tag/{id}/:
    get:
      operationId: api_v1_blog_tag_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    put:
      operationId: api_v1_blog_tag_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogTag'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    patch:
      operationId: api_v1_blog_tag_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    delete:
      operationId: api_v1_blog_tag_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/tag/{id}{format}:
    get:
      operationId: api_v1_blog_tag_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    put:
      operationId: api_v1_blog_tag_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogTag'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    patch:
      operationId: api_v1_blog_tag_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    delete:
      operationId: api_v1_blog_tag_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/cart/:
    get:
      operationId: api_v1_cart_retrieve
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    put:
      operationId: api_v1_cart_update
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    patch:
      operationId: api_v1_cart_partial_update
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: api_v1_cart_destroy
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/cart{format}:
    get:
      operationId: api_v1_cart_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    put:
      operationId: api_v1_cart_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    patch:
      operationId: api_v1_cart_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: api_v1_cart_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/cart/item/:
    get:
      operationId: api_v1_cart_item_list
      parameters:
      - in: query
        name: cart
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartItemList'
          description: ''
    post:
      operationId: api_v1_cart_item_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/v1/cart/item{format}:
    get:
      operationId: api_v1_cart_item_formatted_list
      parameters:
      - in: query
        name: cart
        schema:
          type: integer
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartItemList'
          description: ''
    post:
      operationId: api_v1_cart_item_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/v1/cart/item/{id}:
    get:
      operationId: api_v1_cart_item_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    put:
      operationId: api_v1_cart_item_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    patch:
      operationId: api_v1_cart_item_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    delete:
      operationId: api_v1_cart_item_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/cart/item/{id}{format}:
    get:
      operationId: api_v1_cart_item_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    put:
      operationId: api_v1_cart_item_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    patch:
      operationId: api_v1_cart_item_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    delete:
      operationId: api_v1_cart_item_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/checkout/:
    post:
      operationId: api_v1_checkout_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Checkout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Checkout'
          application/json:
            schema:
              $ref: '#/components/schemas/Checkout'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkout'
          description: ''
  /api/v1/country/:
    get:
      operationId: api_v1_country_list
      parameters:
      - in: query
        name: alpha2
        schema:
          type: string
      - in: query
        name: alpha3
        schema:
          type: string
      - in: query
        name: isoCc
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: phoneCode
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: translations_Name
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
    post:
      operationId: api_v1_country_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/country{format}:
    get:
      operationId: api_v1_country_formatted_list
      parameters:
      - in: query
        name: alpha2
        schema:
          type: string
      - in: query
        name: alpha3
        schema:
          type: string
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: isoCc
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: phoneCode
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: translations_Name
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
    post:
      operationId: api_v1_country_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/country/{alpha_2}/:
    get:
      operationId: api_v1_country_retrieve
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: api_v1_country_update
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: api_v1_country_partial_update
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    delete:
      operationId: api_v1_country_destroy
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/country/{alpha_2}{format}:
    get:
      operationId: api_v1_country_formatted_retrieve
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: api_v1_country_formatted_update
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: api_v1_country_formatted_partial_update
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    delete:
      operationId: api_v1_country_formatted_destroy
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/order/:
    get:
      operationId: api_v1_order_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - CANCELED
          - PAID_AND_SENT
          - PENDING
          - SENT
        description: |-
          * `SENT` - Sent
          * `PAID_AND_SENT` - Paid and Sent
          * `CANCELED` - Canceled
          * `PENDING` - Pending
      - in: query
        name: userId
        schema:
          type: integer
          nullable: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: api_v1_order_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateUpdate'
          description: ''
  /api/v1/order/{id}/:
    get:
      operationId: api_v1_order_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_v1_order_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateUpdate'
          description: ''
    patch:
      operationId: api_v1_order_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreateUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreateUpdate'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateUpdate'
          description: ''
    delete:
      operationId: api_v1_order_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/pay_way/:
    get:
      operationId: api_v1_pay_way_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: cost
        schema:
          type: number
      - in: query
        name: freeForOrderAmount
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayWayList'
          description: ''
    post:
      operationId: api_v1_pay_way_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayWay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayWay'
          application/json:
            schema:
              $ref: '#/components/schemas/PayWay'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayWay'
          description: ''
  /api/v1/pay_way/{id}/:
    get:
      operationId: api_v1_pay_way_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayWay'
          description: ''
    put:
      operationId: api_v1_pay_way_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayWay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayWay'
          application/json:
            schema:
              $ref: '#/components/schemas/PayWay'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayWay'
          description: ''
    patch:
      operationId: api_v1_pay_way_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayWay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayWay'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayWay'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayWay'
          description: ''
    delete:
      operationId: api_v1_pay_way_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/:
    get:
      operationId: api_v1_product_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: maxFinalPrice
        schema:
          type: number
      - in: query
        name: minFinalPrice
        schema:
          type: number
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_v1_product_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product{format}:
    get:
      operationId: api_v1_product_formatted_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: maxFinalPrice
        schema:
          type: number
      - in: query
        name: minFinalPrice
        schema:
          type: number
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_v1_product_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/{id}/:
    get:
      operationId: api_v1_product_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_v1_product_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_v1_product_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_v1_product_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/{id}{format}:
    get:
      operationId: api_v1_product_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_v1_product_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_v1_product_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_v1_product_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/{id}/update_product_hits/:
    post:
      operationId: api_v1_product_update_product_hits_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/{id}/update_product_hits{format}:
    post:
      operationId: api_v1_product_update_product_hits_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/category/:
    get:
      operationId: api_v1_product_category_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductCategoryList'
          description: ''
    post:
      operationId: api_v1_product_category_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
  /api/v1/product/category{format}:
    get:
      operationId: api_v1_product_category_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductCategoryList'
          description: ''
    post:
      operationId: api_v1_product_category_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
  /api/v1/product/category/{id}/:
    get:
      operationId: api_v1_product_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    put:
      operationId: api_v1_product_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    patch:
      operationId: api_v1_product_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    delete:
      operationId: api_v1_product_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/category/{id}{format}:
    get:
      operationId: api_v1_product_category_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    put:
      operationId: api_v1_product_category_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    patch:
      operationId: api_v1_product_category_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    delete:
      operationId: api_v1_product_category_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/favourite/:
    get:
      operationId: api_v1_product_favourite_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productId
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: userId
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductFavouriteList'
          description: ''
    post:
      operationId: api_v1_product_favourite_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
  /api/v1/product/favourite{format}:
    get:
      operationId: api_v1_product_favourite_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productId
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: userId
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductFavouriteList'
          description: ''
    post:
      operationId: api_v1_product_favourite_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
  /api/v1/product/favourite/{id}/:
    get:
      operationId: api_v1_product_favourite_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    put:
      operationId: api_v1_product_favourite_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    patch:
      operationId: api_v1_product_favourite_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    delete:
      operationId: api_v1_product_favourite_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/favourite/{id}{format}:
    get:
      operationId: api_v1_product_favourite_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    put:
      operationId: api_v1_product_favourite_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    patch:
      operationId: api_v1_product_favourite_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    delete:
      operationId: api_v1_product_favourite_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/image/:
    get:
      operationId: api_v1_product_image_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: isMain
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: product
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductImageList'
          description: ''
    post:
      operationId: api_v1_product_image_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/v1/product/image{format}:
    get:
      operationId: api_v1_product_image_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: isMain
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: product
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductImageList'
          description: ''
    post:
      operationId: api_v1_product_image_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/v1/product/image/{id}/:
    get:
      operationId: api_v1_product_image_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    put:
      operationId: api_v1_product_image_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: api_v1_product_image_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    delete:
      operationId: api_v1_product_image_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/image/{id}{format}:
    get:
      operationId: api_v1_product_image_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    put:
      operationId: api_v1_product_image_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: api_v1_product_image_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    delete:
      operationId: api_v1_product_image_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/review/:
    get:
      operationId: api_v1_product_review_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productId
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: userId
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductReviewList'
          description: ''
    post:
      operationId: api_v1_product_review_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/product/review{format}:
    get:
      operationId: api_v1_product_review_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productId
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: userId
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductReviewList'
          description: ''
    post:
      operationId: api_v1_product_review_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/product/review/{id}/:
    get:
      operationId: api_v1_product_review_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    put:
      operationId: api_v1_product_review_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    patch:
      operationId: api_v1_product_review_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    delete:
      operationId: api_v1_product_review_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/product/review/{id}{format}:
    get:
      operationId: api_v1_product_review_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    put:
      operationId: api_v1_product_review_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    patch:
      operationId: api_v1_product_review_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    delete:
      operationId: api_v1_product_review_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/product/review/user_had_reviewed/:
    post:
      operationId: api_v1_product_review_user_had_reviewed_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/product/review/user_had_reviewed{format}:
    post:
      operationId: api_v1_product_review_user_had_reviewed_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/region/:
    get:
      operationId: api_v1_region_list
      parameters:
      - in: query
        name: alpha
        schema:
          type: string
      - in: query
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegionList'
          description: ''
    post:
      operationId: api_v1_region_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/region{format}:
    get:
      operationId: api_v1_region_formatted_list
      parameters:
      - in: query
        name: alpha
        schema:
          type: string
      - in: query
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegionList'
          description: ''
    post:
      operationId: api_v1_region_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/region/{alpha}/:
    get:
      operationId: api_v1_region_retrieve
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    put:
      operationId: api_v1_region_update
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    patch:
      operationId: api_v1_region_partial_update
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    delete:
      operationId: api_v1_region_destroy
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/region/{alpha}{format}:
    get:
      operationId: api_v1_region_formatted_retrieve
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    put:
      operationId: api_v1_region_formatted_update
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    patch:
      operationId: api_v1_region_formatted_partial_update
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    delete:
      operationId: api_v1_region_formatted_destroy
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/region/{alpha}/get_regions_by_country_alpha_2/:
    get:
      operationId: api_v1_region_get_regions_by_country_alpha_2_retrieve
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/region/{alpha}/get_regions_by_country_alpha_2{format}:
    get:
      operationId: api_v1_region_get_regions_by_country_alpha_2_formatted_retrieve
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/search-product:
    get:
      operationId: api_v1_search_product_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /api/v1/search-product{format}:
    get:
      operationId: api_v1_search_product_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /api/v1/session/clear_all/:
    post:
      operationId: api_v1_session_clear_all_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/session/clear_all{format}:
    post:
      operationId: api_v1_session_clear_all_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/slide/:
    get:
      operationId: api_v1_slide_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slider
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlideList'
          description: ''
    post:
      operationId: api_v1_slide_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
          application/json:
            schema:
              $ref: '#/components/schemas/Slide'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
  /api/v1/slide{format}:
    get:
      operationId: api_v1_slide_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slider
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlideList'
          description: ''
    post:
      operationId: api_v1_slide_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
          application/json:
            schema:
              $ref: '#/components/schemas/Slide'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
  /api/v1/slide/{id}/:
    get:
      operationId: api_v1_slide_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    put:
      operationId: api_v1_slide_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
          application/json:
            schema:
              $ref: '#/components/schemas/Slide'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    patch:
      operationId: api_v1_slide_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    delete:
      operationId: api_v1_slide_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/slide/{id}{format}:
    get:
      operationId: api_v1_slide_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    put:
      operationId: api_v1_slide_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
          application/json:
            schema:
              $ref: '#/components/schemas/Slide'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    patch:
      operationId: api_v1_slide_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    delete:
      operationId: api_v1_slide_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/slider/:
    get:
      operationId: api_v1_slider_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSliderList'
          description: ''
    post:
      operationId: api_v1_slider_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slider'
          application/json:
            schema:
              $ref: '#/components/schemas/Slider'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
  /api/v1/slider{format}:
    get:
      operationId: api_v1_slider_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSliderList'
          description: ''
    post:
      operationId: api_v1_slider_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slider'
          application/json:
            schema:
              $ref: '#/components/schemas/Slider'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
  /api/v1/slider/{id}/:
    get:
      operationId: api_v1_slider_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    put:
      operationId: api_v1_slider_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slider'
          application/json:
            schema:
              $ref: '#/components/schemas/Slider'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    patch:
      operationId: api_v1_slider_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    delete:
      operationId: api_v1_slider_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/slider/{id}{format}:
    get:
      operationId: api_v1_slider_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    put:
      operationId: api_v1_slider_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slider'
          application/json:
            schema:
              $ref: '#/components/schemas/Slider'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    patch:
      operationId: api_v1_slider_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    delete:
      operationId: api_v1_slider_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/tip/:
    get:
      operationId: api_v1_tip_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: kind
        schema:
          type: string
          enum:
          - ERROR
          - INFO
          - SUCCESS
          - WARNING
        description: |-
          * `SUCCESS` - Success
          * `INFO` - Info
          * `ERROR` - Error
          * `WARNING` - Warning
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTipList'
          description: ''
    post:
      operationId: api_v1_tip_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tip'
          application/json:
            schema:
              $ref: '#/components/schemas/Tip'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
  /api/v1/tip{format}:
    get:
      operationId: api_v1_tip_formatted_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: kind
        schema:
          type: string
          enum:
          - ERROR
          - INFO
          - SUCCESS
          - WARNING
        description: |-
          * `SUCCESS` - Success
          * `INFO` - Info
          * `ERROR` - Error
          * `WARNING` - Warning
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTipList'
          description: ''
    post:
      operationId: api_v1_tip_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tip'
          application/json:
            schema:
              $ref: '#/components/schemas/Tip'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
  /api/v1/tip/{id}/:
    get:
      operationId: api_v1_tip_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    put:
      operationId: api_v1_tip_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tip'
          application/json:
            schema:
              $ref: '#/components/schemas/Tip'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    patch:
      operationId: api_v1_tip_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTip'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTip'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    delete:
      operationId: api_v1_tip_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/tip/{id}{format}:
    get:
      operationId: api_v1_tip_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    put:
      operationId: api_v1_tip_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tip'
          application/json:
            schema:
              $ref: '#/components/schemas/Tip'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    patch:
      operationId: api_v1_tip_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTip'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTip'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    delete:
      operationId: api_v1_tip_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/user/account/:
    get:
      operationId: api_v1_user_account_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserAccountList'
          description: ''
    post:
      operationId: api_v1_user_account_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/user/account{format}:
    get:
      operationId: api_v1_user_account_formatted_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserAccountList'
          description: ''
    post:
      operationId: api_v1_user_account_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/user/account/{id}/:
    get:
      operationId: api_v1_user_account_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
    put:
      operationId: api_v1_user_account_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
    patch:
      operationId: api_v1_user_account_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAccount'
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
    delete:
      operationId: api_v1_user_account_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/account/{id}{format}:
    get:
      operationId: api_v1_user_account_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
    put:
      operationId: api_v1_user_account_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccount'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
    patch:
      operationId: api_v1_user_account_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAccount'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAccount'
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
    delete:
      operationId: api_v1_user_account_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/account/session/:
    get:
      operationId: api_v1_user_account_session_retrieve
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/user/account/session{format}:
    get:
      operationId: api_v1_user_account_session_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
          description: ''
  /api/v1/user/address/:
    get:
      operationId: api_v1_user_address_list
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: string
          title: Country Code Alpha 2
      - in: query
        name: floor
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        description: |-
          * `0` - Basement
          * `1` - Ground Floor
          * `2` - First Floor
          * `3` - Second Floor
          * `4` - Third Floor
          * `5` - Fourth Floor
          * `6` - Fifth Floor
          * `7` - Sixth Floor Plus
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: isMain
        schema:
          type: boolean
      - in: query
        name: locationType
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
          - 2
        description: |-
          * `0` - Home
          * `1` - Office
          * `2` - Other
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: street
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      - in: query
        name: zipcode
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserAddressList'
          description: ''
    post:
      operationId: api_v1_user_address_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/user/address{format}:
    get:
      operationId: api_v1_user_address_formatted_list
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: string
          title: Country Code Alpha 2
      - in: query
        name: floor
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        description: |-
          * `0` - Basement
          * `1` - Ground Floor
          * `2` - First Floor
          * `3` - Second Floor
          * `4` - Third Floor
          * `5` - Fourth Floor
          * `6` - Fifth Floor
          * `7` - Sixth Floor Plus
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: isMain
        schema:
          type: boolean
      - in: query
        name: locationType
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
          - 2
        description: |-
          * `0` - Home
          * `1` - Office
          * `2` - Other
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: street
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      - in: query
        name: zipcode
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserAddressList'
          description: ''
    post:
      operationId: api_v1_user_address_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/user/address/{id}/:
    get:
      operationId: api_v1_user_address_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    put:
      operationId: api_v1_user_address_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    patch:
      operationId: api_v1_user_address_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    delete:
      operationId: api_v1_user_address_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/address/{id}{format}:
    get:
      operationId: api_v1_user_address_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    put:
      operationId: api_v1_user_address_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    patch:
      operationId: api_v1_user_address_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    delete:
      operationId: api_v1_user_address_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/address/{id}/set_main/:
    post:
      operationId: api_v1_user_address_set_main_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/user/address/{id}/set_main{format}:
    post:
      operationId: api_v1_user_address_set_main_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/vat/:
    get:
      operationId: api_v1_vat_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: value
        schema:
          type: number
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVatList'
          description: ''
    post:
      operationId: api_v1_vat_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vat'
          application/json:
            schema:
              $ref: '#/components/schemas/Vat'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
  /api/v1/vat{format}:
    get:
      operationId: api_v1_vat_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: value
        schema:
          type: number
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVatList'
          description: ''
    post:
      operationId: api_v1_vat_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vat'
          application/json:
            schema:
              $ref: '#/components/schemas/Vat'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
  /api/v1/vat/{id}/:
    get:
      operationId: api_v1_vat_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    put:
      operationId: api_v1_vat_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vat'
          application/json:
            schema:
              $ref: '#/components/schemas/Vat'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    patch:
      operationId: api_v1_vat_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVat'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVat'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    delete:
      operationId: api_v1_vat_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/vat/{id}{format}:
    get:
      operationId: api_v1_vat_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    put:
      operationId: api_v1_vat_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vat'
          application/json:
            schema:
              $ref: '#/components/schemas/Vat'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    patch:
      operationId: api_v1_vat_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVat'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVat'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    delete:
      operationId: api_v1_vat_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    BlankEnum:
      enum:
      - ''
    BlogAuthor:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                bio:
                  type: string
            de:
              type: object
              properties:
                bio:
                  type: string
            el:
              type: object
              properties:
                bio:
                  type: string
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - translations
      - updatedAt
      - user
      - uuid
    BlogCategory:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
      required:
      - id
      - mainImageAbsoluteUrl
      - mainImageFilename
      - slug
      - sortOrder
      - translations
      - updatedAt
      - uuid
    BlogComment:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                content:
                  type: string
            de:
              type: object
              properties:
                content:
                  type: string
            el:
              type: object
              properties:
                content:
                  type: string
        id:
          type: integer
          readOnly: true
        isApproved:
          type: boolean
        likes:
          type: array
          items:
            type: integer
        user:
          type: integer
        post:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        numberOfLikes:
          type: integer
          readOnly: true
      required:
      - id
      - likes
      - numberOfLikes
      - post
      - translations
      - updatedAt
      - user
      - uuid
    BlogPost:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        likes:
          type: array
          items:
            type: integer
        category:
          type: integer
        tags:
          type: array
          items:
            type: integer
        author:
          type: integer
        status:
          $ref: '#/components/schemas/BlogPostStatusEnum'
        featured:
          type: boolean
        viewCount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        isPublished:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        numberOfLikes:
          type: integer
          readOnly: true
        numberOfComments:
          type: integer
          readOnly: true
        getPostTagsCount:
          type: integer
          readOnly: true
      required:
      - author
      - category
      - getPostTagsCount
      - id
      - likes
      - mainImageAbsoluteUrl
      - mainImageFilename
      - numberOfComments
      - numberOfLikes
      - slug
      - tags
      - translations
      - updatedAt
      - uuid
    BlogPostStatusEnum:
      enum:
      - DRAFT
      - PUBLISHED
      - ARCHIVED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `PUBLISHED` - Published
        * `ARCHIVED` - Archived
    BlogTag:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
        id:
          type: integer
          readOnly: true
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        getTagPostsCount:
          type: integer
          readOnly: true
      required:
      - getTagPostsCount
      - id
      - sortOrder
      - translations
      - updatedAt
      - uuid
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        totalPrice:
          type: number
          format: double
          readOnly: true
        totalDiscountValue:
          type: number
          format: double
          readOnly: true
        totalVatValue:
          type: number
          format: double
          readOnly: true
        totalItems:
          type: integer
          readOnly: true
        totalItemsUnique:
          type: integer
          readOnly: true
        cartItems:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
      required:
      - cartItems
      - id
      - totalDiscountValue
      - totalItems
      - totalItemsUnique
      - totalPrice
      - totalVatValue
    CartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cart:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        totalPrice:
          type: number
          format: double
          readOnly: true
        totalDiscountValue:
          type: number
          format: double
          readOnly: true
        productDiscountPercent:
          type: number
          format: double
          readOnly: true
      required:
      - cart
      - id
      - product
      - productDiscountPercent
      - totalDiscountValue
      - totalPrice
    Checkout:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          nullable: true
        floor:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        payWay:
          type: integer
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        zipcode:
          type: string
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 255
        mobilePhone:
          type: string
          nullable: true
          maxLength: 255
        paidAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        customerNotes:
          type: string
          nullable: true
        orderItemOrder:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutItem'
        shippingPrice:
          type: number
          format: double
          maximum: 1000000
          minimum: -1000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        documentType:
          $ref: '#/components/schemas/DocumentTypeEnum'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        totalPriceItems:
          type: number
          format: double
          readOnly: true
        totalPriceExtra:
          type: number
          format: double
          readOnly: true
        fullAddress:
          type: string
          readOnly: true
      required:
      - city
      - email
      - firstName
      - fullAddress
      - id
      - lastName
      - orderItemOrder
      - paidAmount
      - phone
      - street
      - streetNumber
      - totalPriceExtra
      - totalPriceItems
      - updatedAt
      - uuid
      - zipcode
    CheckoutItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - id
      - product
    Country:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        alpha2:
          type: string
          title: Country Code Alpha 2
          maxLength: 2
        alpha3:
          type: string
          title: Country Code Alpha 3
          maxLength: 3
        isoCc:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: ISO Country Code
        phoneCode:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
      required:
      - alpha2
      - alpha3
      - mainImageAbsoluteUrl
      - mainImageFilename
      - sortOrder
      - translations
      - updatedAt
      - uuid
    DocumentTypeEnum:
      enum:
      - RECEIPT
      - INVOICE
      type: string
      description: |-
        * `RECEIPT` - Receipt
        * `INVOICE` - Invoice
    FloorEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      type: integer
      description: |-
        * `0` - Basement
        * `1` - Ground Floor
        * `2` - First Floor
        * `3` - Second Floor
        * `4` - Third Floor
        * `5` - Fourth Floor
        * `6` - Fifth Floor
        * `7` - Sixth Floor Plus
    KindEnum:
      enum:
      - SUCCESS
      - INFO
      - ERROR
      - WARNING
      type: string
      description: |-
        * `SUCCESS` - Success
        * `INFO` - Info
        * `ERROR` - Error
        * `WARNING` - Warning
    LocationTypeEnum:
      enum:
      - 0
      - 1
      - 2
      type: integer
      description: |-
        * `0` - Home
        * `1` - Office
        * `2` - Other
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        country:
          allOf:
          - $ref: '#/components/schemas/Country'
          readOnly: true
        region:
          allOf:
          - $ref: '#/components/schemas/Region'
          readOnly: true
        floor:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        payWay:
          allOf:
          - $ref: '#/components/schemas/PayWay'
          readOnly: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        zipcode:
          type: string
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 255
        mobilePhone:
          type: string
          nullable: true
          maxLength: 255
        customerNotes:
          type: string
          nullable: true
        paidAmount:
          type: number
          format: double
          maximum: 1000000
          minimum: -1000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          nullable: true
        orderItemOrder:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        shippingPrice:
          type: number
          format: double
          maximum: 1000000
          minimum: -1000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        documentType:
          $ref: '#/components/schemas/DocumentTypeEnum'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        totalPriceItems:
          type: number
          format: double
          readOnly: true
        totalPriceExtra:
          type: number
          format: double
          readOnly: true
        fullAddress:
          type: string
          readOnly: true
      required:
      - city
      - country
      - email
      - firstName
      - fullAddress
      - id
      - lastName
      - orderItemOrder
      - payWay
      - phone
      - region
      - street
      - streetNumber
      - totalPriceExtra
      - totalPriceItems
      - updatedAt
      - uuid
      - zipcode
    OrderCreateUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          nullable: true
        floor:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        payWay:
          type: integer
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        zipcode:
          type: string
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 255
        mobilePhone:
          type: string
          nullable: true
          maxLength: 255
        paidAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        customerNotes:
          type: string
          nullable: true
        orderItemOrder:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreateUpdate'
        shippingPrice:
          type: number
          format: double
          maximum: 1000000
          minimum: -1000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        documentType:
          $ref: '#/components/schemas/DocumentTypeEnum'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        totalPriceItems:
          type: number
          format: double
          readOnly: true
        totalPriceExtra:
          type: number
          format: double
          readOnly: true
        fullAddress:
          type: string
          readOnly: true
      required:
      - city
      - email
      - firstName
      - fullAddress
      - id
      - lastName
      - orderItemOrder
      - paidAmount
      - phone
      - street
      - streetNumber
      - totalPriceExtra
      - totalPriceItems
      - updatedAt
      - uuid
      - zipcode
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        price:
          type: number
          format: double
          maximum: 1000000
          minimum: -1000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        totalPrice:
          type: number
          format: double
          readOnly: true
      required:
      - id
      - price
      - product
      - sortOrder
      - totalPrice
      - updatedAt
      - uuid
    OrderItemCreateUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        price:
          type: number
          format: double
          maximum: 1000000
          minimum: -1000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - id
      - price
      - product
    OrderStatusEnum:
      enum:
      - SENT
      - PAID_AND_SENT
      - CANCELED
      - PENDING
      type: string
      description: |-
        * `SENT` - Sent
        * `PAID_AND_SENT` - Paid and Sent
        * `CANCELED` - Canceled
        * `PENDING` - Pending
    PaginatedBlogAuthorList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogAuthor'
    PaginatedBlogCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogCategory'
    PaginatedBlogCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogComment'
    PaginatedBlogPostList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogPost'
    PaginatedBlogTagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogTag'
    PaginatedCartItemList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
    PaginatedCountryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PaginatedOrderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedPayWayList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PayWay'
    PaginatedProductCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
    PaginatedProductFavouriteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductFavourite'
    PaginatedProductImageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProductReviewList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductReview'
    PaginatedRegionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Region'
    PaginatedSlideList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Slide'
    PaginatedSliderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Slider'
    PaginatedTipList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tip'
    PaginatedUserAccountList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserAccount'
    PaginatedUserAddressList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserAddress'
    PaginatedVatList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vat'
    PatchedBlogAuthor:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                bio:
                  type: string
            de:
              type: object
              properties:
                bio:
                  type: string
            el:
              type: object
              properties:
                bio:
                  type: string
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedBlogCategory:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
    PatchedBlogComment:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                content:
                  type: string
            de:
              type: object
              properties:
                content:
                  type: string
            el:
              type: object
              properties:
                content:
                  type: string
        id:
          type: integer
          readOnly: true
        isApproved:
          type: boolean
        likes:
          type: array
          items:
            type: integer
        user:
          type: integer
        post:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        numberOfLikes:
          type: integer
          readOnly: true
    PatchedBlogPost:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        likes:
          type: array
          items:
            type: integer
        category:
          type: integer
        tags:
          type: array
          items:
            type: integer
        author:
          type: integer
        status:
          $ref: '#/components/schemas/BlogPostStatusEnum'
        featured:
          type: boolean
        viewCount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        isPublished:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        numberOfLikes:
          type: integer
          readOnly: true
        numberOfComments:
          type: integer
          readOnly: true
        getPostTagsCount:
          type: integer
          readOnly: true
    PatchedBlogTag:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
        id:
          type: integer
          readOnly: true
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        getTagPostsCount:
          type: integer
          readOnly: true
    PatchedCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        totalPrice:
          type: number
          format: double
          readOnly: true
        totalDiscountValue:
          type: number
          format: double
          readOnly: true
        totalVatValue:
          type: number
          format: double
          readOnly: true
        totalItems:
          type: integer
          readOnly: true
        totalItemsUnique:
          type: integer
          readOnly: true
        cartItems:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
    PatchedCartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cart:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        totalPrice:
          type: number
          format: double
          readOnly: true
        totalDiscountValue:
          type: number
          format: double
          readOnly: true
        productDiscountPercent:
          type: number
          format: double
          readOnly: true
    PatchedCountry:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        alpha2:
          type: string
          title: Country Code Alpha 2
          maxLength: 2
        alpha3:
          type: string
          title: Country Code Alpha 3
          maxLength: 3
        isoCc:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: ISO Country Code
        phoneCode:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
    PatchedOrderCreateUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          nullable: true
        floor:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        payWay:
          type: integer
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatusEnum'
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        email:
          type: string
          maxLength: 255
        zipcode:
          type: string
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 255
        phone:
          type: string
          maxLength: 255
        mobilePhone:
          type: string
          nullable: true
          maxLength: 255
        paidAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        customerNotes:
          type: string
          nullable: true
        orderItemOrder:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreateUpdate'
        shippingPrice:
          type: number
          format: double
          maximum: 1000000
          minimum: -1000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        documentType:
          $ref: '#/components/schemas/DocumentTypeEnum'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        totalPriceItems:
          type: number
          format: double
          readOnly: true
        totalPriceExtra:
          type: number
          format: double
          readOnly: true
        fullAddress:
          type: string
          readOnly: true
    PatchedPayWay:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        id:
          type: integer
          readOnly: true
        active:
          type: boolean
        cost:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        freeForOrderAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        icon:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        iconAbsoluteUrl:
          type: string
          readOnly: true
        iconFilename:
          type: string
          readOnly: true
    PatchedProduct:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        category:
          type: integer
        absoluteUrl:
          type: string
          readOnly: true
        price:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        vat:
          type: integer
        vatPercent:
          oneOf:
          - type: number
            format: double
          - type: integer
          readOnly: true
        vatValue:
          oneOf:
          - type: number
            format: double
          - type: integer
          readOnly: true
        finalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        hits:
          type: integer
          maximum: 2147483647
          minimum: 0
        likesCounter:
          type: integer
          readOnly: true
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        active:
          type: boolean
        weight:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          title: Weight (kg)
        seoTitle:
          type: string
          nullable: true
          maxLength: 70
        seoDescription:
          type: string
          nullable: true
          maxLength: 300
        seoKeywords:
          type: string
          nullable: true
          maxLength: 255
        uuid:
          type: string
          format: uuid
          readOnly: true
        discountPercent:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        discountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        priceSavePercent:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        reviewAverage:
          type: number
          format: double
          readOnly: true
        reviewCounter:
          type: integer
          readOnly: true
    PatchedProductCategory:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        categoryMenuImageOneAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuImageOneFilename:
          type: string
          readOnly: true
        categoryMenuImageTwoAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuImageTwoFilename:
          type: string
          readOnly: true
        categoryMenuMainBannerAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuMainBannerFilename:
          type: string
          readOnly: true
        parent:
          type: integer
          nullable: true
        level:
          type: integer
          readOnly: true
        treeId:
          type: integer
          readOnly: true
        absoluteUrl:
          type: string
          readOnly: true
        recursiveProductCount:
          type: integer
          readOnly: true
        seoTitle:
          type: string
          nullable: true
          maxLength: 70
        seoDescription:
          type: string
          nullable: true
          maxLength: 300
        seoKeywords:
          type: string
          nullable: true
          maxLength: 255
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedProductFavourite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        product:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedProductImage:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        image:
          type: string
          format: uri
        thumbnail:
          type: string
          format: uri
          nullable: true
        isMain:
          type: boolean
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
    PatchedProductReview:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                comment:
                  type: string
            de:
              type: object
              properties:
                comment:
                  type: string
            el:
              type: object
              properties:
                comment:
                  type: string
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        user:
          type: integer
        rate:
          allOf:
          - $ref: '#/components/schemas/RateEnum'
          minimum: 0
          maximum: 32767
        status:
          $ref: '#/components/schemas/ProductReviewStatusEnum'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        isPublished:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedRegion:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        alpha:
          type: string
          maxLength: 10
        alpha2:
          type: string
          title: Country Code Alpha 2
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedSlide:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
        id:
          type: integer
          readOnly: true
        slider:
          type: integer
        discount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        showButton:
          type: boolean
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedSlider:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        video:
          type: string
          format: uri
          nullable: true
    PatchedTip:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
        kind:
          $ref: '#/components/schemas/KindEnum'
        icon:
          type: string
          format: uri
          nullable: true
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedUserAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        image:
          type: string
          format: uri
          nullable: true
        firstName:
          type: string
          nullable: true
          maxLength: 255
        lastName:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 255
        zipcode:
          type: string
          nullable: true
          title: Zip Code
          maxLength: 255
        address:
          type: string
          nullable: true
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          nullable: true
        isActive:
          type: boolean
          title: Active
        isStaff:
          type: boolean
          title: Staff
        birthDate:
          type: string
          format: date
          nullable: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        isSuperuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        lastLogin:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedUserAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        zipcode:
          type: string
          title: Zip Code
          maxLength: 255
        floor:
          nullable: true
          minimum: 0
          maximum: 32767
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          minimum: 0
          maximum: 32767
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone:
          type: string
          nullable: true
          title: Phone Number
          maxLength: 255
        mobilePhone:
          type: string
          nullable: true
          title: Mobile Phone Number
          maxLength: 255
        notes:
          type: string
          nullable: true
          maxLength: 255
        isMain:
          type: boolean
        user:
          type: integer
        country:
          type: string
          title: Country Code Alpha 2
        region:
          type: string
    PatchedVat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PayWay:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        id:
          type: integer
          readOnly: true
        active:
          type: boolean
        cost:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        freeForOrderAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        icon:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        iconAbsoluteUrl:
          type: string
          readOnly: true
        iconFilename:
          type: string
          readOnly: true
      required:
      - iconAbsoluteUrl
      - iconFilename
      - id
      - sortOrder
      - translations
      - updatedAt
      - uuid
    Product:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        category:
          type: integer
        absoluteUrl:
          type: string
          readOnly: true
        price:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        vat:
          type: integer
        vatPercent:
          oneOf:
          - type: number
            format: double
          - type: integer
          readOnly: true
        vatValue:
          oneOf:
          - type: number
            format: double
          - type: integer
          readOnly: true
        finalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        hits:
          type: integer
          maximum: 2147483647
          minimum: 0
        likesCounter:
          type: integer
          readOnly: true
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        active:
          type: boolean
        weight:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          title: Weight (kg)
        seoTitle:
          type: string
          nullable: true
          maxLength: 70
        seoDescription:
          type: string
          nullable: true
          maxLength: 300
        seoKeywords:
          type: string
          nullable: true
          maxLength: 255
        uuid:
          type: string
          format: uuid
          readOnly: true
        discountPercent:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        discountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        priceSavePercent:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        reviewAverage:
          type: number
          format: double
          readOnly: true
        reviewCounter:
          type: integer
          readOnly: true
      required:
      - absoluteUrl
      - category
      - discountValue
      - finalPrice
      - id
      - likesCounter
      - mainImageAbsoluteUrl
      - mainImageFilename
      - price
      - priceSavePercent
      - reviewAverage
      - reviewCounter
      - slug
      - translations
      - updatedAt
      - uuid
      - vat
      - vatPercent
      - vatValue
    ProductCategory:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        categoryMenuImageOneAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuImageOneFilename:
          type: string
          readOnly: true
        categoryMenuImageTwoAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuImageTwoFilename:
          type: string
          readOnly: true
        categoryMenuMainBannerAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuMainBannerFilename:
          type: string
          readOnly: true
        parent:
          type: integer
          nullable: true
        level:
          type: integer
          readOnly: true
        treeId:
          type: integer
          readOnly: true
        absoluteUrl:
          type: string
          readOnly: true
        recursiveProductCount:
          type: integer
          readOnly: true
        seoTitle:
          type: string
          nullable: true
          maxLength: 70
        seoDescription:
          type: string
          nullable: true
          maxLength: 300
        seoKeywords:
          type: string
          nullable: true
          maxLength: 255
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - absoluteUrl
      - categoryMenuImageOneAbsoluteUrl
      - categoryMenuImageOneFilename
      - categoryMenuImageTwoAbsoluteUrl
      - categoryMenuImageTwoFilename
      - categoryMenuMainBannerAbsoluteUrl
      - categoryMenuMainBannerFilename
      - id
      - level
      - recursiveProductCount
      - slug
      - translations
      - treeId
      - updatedAt
      - uuid
    ProductFavourite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        product:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - product
      - updatedAt
      - user
      - uuid
    ProductImage:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        image:
          type: string
          format: uri
        thumbnail:
          type: string
          format: uri
          nullable: true
        isMain:
          type: boolean
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
      required:
      - id
      - image
      - mainImageAbsoluteUrl
      - mainImageFilename
      - product
      - sortOrder
      - translations
      - updatedAt
      - uuid
    ProductReview:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                comment:
                  type: string
            de:
              type: object
              properties:
                comment:
                  type: string
            el:
              type: object
              properties:
                comment:
                  type: string
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        user:
          type: integer
        rate:
          allOf:
          - $ref: '#/components/schemas/RateEnum'
          minimum: 0
          maximum: 32767
        status:
          $ref: '#/components/schemas/ProductReviewStatusEnum'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        isPublished:
          type: boolean
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - product
      - rate
      - translations
      - updatedAt
      - user
      - uuid
    ProductReviewStatusEnum:
      enum:
      - NEW
      - 'TRUE'
      - 'FALSE'
      type: string
      description: |-
        * `NEW` - New
        * `TRUE` - True
        * `FALSE` - False
    RateEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      type: integer
      description: |-
        * `1` - One
        * `2` - Two
        * `3` - Three
        * `4` - Four
        * `5` - Five
        * `6` - Six
        * `7` - Seven
        * `8` - Eight
        * `9` - Nine
        * `10` - Ten
    Region:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        alpha:
          type: string
          maxLength: 10
        alpha2:
          type: string
          title: Country Code Alpha 2
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - alpha
      - alpha2
      - sortOrder
      - translations
      - updatedAt
      - uuid
    Slide:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
        id:
          type: integer
          readOnly: true
        slider:
          type: integer
        discount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        showButton:
          type: boolean
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - dateEnd
      - dateStart
      - id
      - mainImageAbsoluteUrl
      - mainImageFilename
      - slider
      - sortOrder
      - translations
      - updatedAt
      - uuid
    Slider:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        video:
          type: string
          format: uri
          nullable: true
      required:
      - id
      - mainImageAbsoluteUrl
      - mainImageFilename
      - translations
    Tip:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
        kind:
          $ref: '#/components/schemas/KindEnum'
        icon:
          type: string
          format: uri
          nullable: true
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - kind
      - sortOrder
      - translations
      - updatedAt
      - uuid
    UserAccount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        image:
          type: string
          format: uri
          nullable: true
        firstName:
          type: string
          nullable: true
          maxLength: 255
        lastName:
          type: string
          nullable: true
          maxLength: 255
        phone:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          nullable: true
          maxLength: 255
        zipcode:
          type: string
          nullable: true
          title: Zip Code
          maxLength: 255
        address:
          type: string
          nullable: true
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          nullable: true
        isActive:
          type: boolean
          title: Active
        isStaff:
          type: boolean
          title: Staff
        birthDate:
          type: string
          format: date
          nullable: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        isSuperuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        lastLogin:
          type: string
          format: date-time
          readOnly: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - email
      - id
      - lastLogin
      - mainImageAbsoluteUrl
      - mainImageFilename
      - updatedAt
      - uuid
    UserAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        zipcode:
          type: string
          title: Zip Code
          maxLength: 255
        floor:
          nullable: true
          minimum: 0
          maximum: 32767
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          minimum: 0
          maximum: 32767
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone:
          type: string
          nullable: true
          title: Phone Number
          maxLength: 255
        mobilePhone:
          type: string
          nullable: true
          title: Mobile Phone Number
          maxLength: 255
        notes:
          type: string
          nullable: true
          maxLength: 255
        isMain:
          type: boolean
        user:
          type: integer
        country:
          type: string
          title: Country Code Alpha 2
        region:
          type: string
      required:
      - city
      - country
      - firstName
      - id
      - lastName
      - region
      - street
      - streetNumber
      - title
      - updatedAt
      - user
      - uuid
      - zipcode
    Vat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - id
      - updatedAt
      - uuid
      - value
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
