openapi: 3.0.3
info:
  title: Grooveshop API
  version: 1.0.0
  description: Grooveshop API description
paths:
  /api/v1/api-token-auth/:
    post:
      operationId: api_v1_api_token_auth_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/v1/auth/facebook/connect:
    post:
      operationId: api_v1_auth_facebook_connect_create
      description: |-
        class used for social account linking

        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookConnect(SocialConnectView):
            adapter_class = FacebookOAuth2Adapter
        -------------
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          application/json:
            schema:
              $ref: '#/components/schemas/SocialConnect'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialConnect'
          description: ''
  /api/v1/auth/facebook/login:
    post:
      operationId: api_v1_auth_facebook_login_create
      description: |-
        class used for social authentications
        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
        -------------

        example usage for facebook with code

        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter
        from allauth.socialaccount.providers.oauth2.client import OAuth2Client

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
            client_class = OAuth2Client
            callback_url = 'localhost:8000'
        -------------
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/v1/auth/google/connect:
    post:
      operationId: api_v1_auth_google_connect_create
      description: |-
        class used for social account linking

        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookConnect(SocialConnectView):
            adapter_class = FacebookOAuth2Adapter
        -------------
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          application/json:
            schema:
              $ref: '#/components/schemas/SocialConnect'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialConnect'
          description: ''
  /api/v1/auth/google/login:
    post:
      operationId: api_v1_auth_google_login_create
      description: |-
        class used for social authentications
        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
        -------------

        example usage for facebook with code

        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter
        from allauth.socialaccount.providers.oauth2.client import OAuth2Client

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
            client_class = OAuth2Client
            callback_url = 'localhost:8000'
        -------------
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/v1/auth/is_user_registered:
    post:
      operationId: api_v1_auth_is_user_registered_create
      description: Returns if the user is already registered or not.
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        registered:
          content:
            application/json:
              schema:
                type: boolean
          description: ''
  /api/v1/auth/login:
    post:
      operationId: api_v1_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticationLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticationLogin'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationLogin'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationLogin'
          description: ''
  /api/v1/auth/logout:
    get:
      operationId: api_v1_auth_logout_retrieve
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/mfa/recovery-codes/generate:
    post:
      operationId: api_v1_auth_mfa_recovery_codes_generate_create
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/mfa/recovery-codes/list:
    get:
      operationId: api_v1_auth_mfa_recovery_codes_list_retrieve
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/mfa/totp/activate:
    get:
      operationId: api_v1_auth_mfa_totp_activate_retrieve
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateTOTP'
          description: ''
    post:
      operationId: api_v1_auth_mfa_totp_activate_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivateTOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivateTOTP'
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateTOTP'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateTOTP'
          description: ''
  /api/v1/auth/mfa/totp/active:
    get:
      operationId: api_v1_auth_mfa_totp_active_retrieve
      description: Check if TOTP is enabled for the current user
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPEnabled'
          description: ''
  /api/v1/auth/mfa/totp/authenticate:
    post:
      operationId: api_v1_auth_mfa_totp_authenticate_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticateTOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticateTOTP'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateTOTP'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticateTOTP'
          description: ''
  /api/v1/auth/mfa/totp/deactivate:
    post:
      operationId: api_v1_auth_mfa_totp_deactivate_create
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/auth/password/change:
    post:
      operationId: api_v1_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationPasswordChange'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationPasswordChange'
          description: ''
  /api/v1/auth/password/reset:
    post:
      operationId: api_v1_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticationPasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthenticationPasswordReset'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationPasswordReset'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationPasswordReset'
          description: ''
  /api/v1/auth/password/reset/confirm:
    post:
      operationId: api_v1_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationPasswordResetConfirm'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationPasswordResetConfirm'
          description: ''
  /api/v1/auth/registration:
    post:
      operationId: api_v1_auth_registration_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRegister'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationRegister'
          description: ''
  /api/v1/auth/registration/resend-email:
    post:
      operationId: api_v1_auth_registration_resend_email_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailVerification'
          description: ''
  /api/v1/auth/registration/verify-email:
    post:
      operationId: api_v1_auth_registration_verify_email_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
  /api/v1/auth/session/active_users_count:
    get:
      operationId: api_v1_auth_session_active_users_count_retrieve
      description: Returns the number of active users.
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveUsersCount'
          description: ''
  /api/v1/auth/session/active_users_count{format}:
    get:
      operationId: api_v1_auth_session_active_users_count_formatted_retrieve
      description: Returns the number of active users.
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveUsersCount'
          description: ''
  /api/v1/auth/socialaccounts:
    get:
      operationId: api_v1_auth_socialaccounts_list
      description: List SocialAccounts for the currently logged in user
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialAccount'
          description: ''
  /api/v1/auth/socialaccounts/{id}/disconnect:
    post:
      operationId: api_v1_auth_socialaccounts_disconnect_create
      description: |-
        Disconnect SocialAccount from remote service for
        the currently logged in user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialConnect'
          application/json:
            schema:
              $ref: '#/components/schemas/SocialConnect'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialConnect'
          description: ''
  /api/v1/auth/token/blacklist:
    post:
      operationId: api_v1_auth_token_blacklist_create
      description: |-
        Takes a token and blacklists it. Must be used with the
        `rest_framework_simplejwt.token_blacklist` app installed.
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklist'
          description: ''
  /api/v1/auth/token/refresh:
    post:
      operationId: api_v1_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/token/verify:
    post:
      operationId: api_v1_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/auth/user:
    get:
      operationId: api_v1_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
    put:
      operationId: api_v1_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authentication'
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
    patch:
      operationId: api_v1_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
  /api/v1/blog/author:
    get:
      operationId: api_v1_blog_author_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogAuthorList'
          description: ''
    post:
      operationId: api_v1_blog_author_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
  /api/v1/blog/author{format}:
    get:
      operationId: api_v1_blog_author_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogAuthorList'
          description: ''
    post:
      operationId: api_v1_blog_author_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
  /api/v1/blog/author/{id}:
    get:
      operationId: api_v1_blog_author_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    put:
      operationId: api_v1_blog_author_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    patch:
      operationId: api_v1_blog_author_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    delete:
      operationId: api_v1_blog_author_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/author/{id}{format}:
    get:
      operationId: api_v1_blog_author_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    put:
      operationId: api_v1_blog_author_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogAuthor'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    patch:
      operationId: api_v1_blog_author_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogAuthor'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogAuthor'
          description: ''
    delete:
      operationId: api_v1_blog_author_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/category:
    get:
      operationId: api_v1_blog_category_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogCategoryList'
          description: ''
    post:
      operationId: api_v1_blog_category_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCategory'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
  /api/v1/blog/category{format}:
    get:
      operationId: api_v1_blog_category_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogCategoryList'
          description: ''
    post:
      operationId: api_v1_blog_category_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCategory'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
  /api/v1/blog/category/{id}:
    get:
      operationId: api_v1_blog_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    put:
      operationId: api_v1_blog_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCategory'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    patch:
      operationId: api_v1_blog_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    delete:
      operationId: api_v1_blog_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/category/{id}{format}:
    get:
      operationId: api_v1_blog_category_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    put:
      operationId: api_v1_blog_category_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogCategory'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    patch:
      operationId: api_v1_blog_category_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogCategory'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogCategory'
          description: ''
    delete:
      operationId: api_v1_blog_category_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/comment:
    get:
      operationId: api_v1_blog_comment_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: post
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogCommentList'
          description: ''
    post:
      operationId: api_v1_blog_comment_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
  /api/v1/blog/comment{format}:
    get:
      operationId: api_v1_blog_comment_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: post
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogCommentList'
          description: ''
    post:
      operationId: api_v1_blog_comment_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
  /api/v1/blog/comment/{id}:
    get:
      operationId: api_v1_blog_comment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    put:
      operationId: api_v1_blog_comment_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    patch:
      operationId: api_v1_blog_comment_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    delete:
      operationId: api_v1_blog_comment_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/blog/comment/{id}{format}:
    get:
      operationId: api_v1_blog_comment_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    put:
      operationId: api_v1_blog_comment_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    patch:
      operationId: api_v1_blog_comment_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogComment'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
    delete:
      operationId: api_v1_blog_comment_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/blog/comment/user_blog_comment:
    post:
      operationId: api_v1_blog_comment_user_blog_comment_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
  /api/v1/blog/comment/user_blog_comment{format}:
    post:
      operationId: api_v1_blog_comment_user_blog_comment_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogComment'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogComment'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogComment'
          description: ''
  /api/v1/blog/post:
    get:
      operationId: api_v1_blog_post_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogPostList'
          description: ''
    post:
      operationId: api_v1_blog_post_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post{format}:
    get:
      operationId: api_v1_blog_post_formatted_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slug
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogPostList'
          description: ''
    post:
      operationId: api_v1_blog_post_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}:
    get:
      operationId: api_v1_blog_post_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    put:
      operationId: api_v1_blog_post_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    patch:
      operationId: api_v1_blog_post_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    delete:
      operationId: api_v1_blog_post_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/post/{id}{format}:
    get:
      operationId: api_v1_blog_post_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    put:
      operationId: api_v1_blog_post_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    patch:
      operationId: api_v1_blog_post_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogPost'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
    delete:
      operationId: api_v1_blog_post_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/post/{id}/comments:
    get:
      operationId: api_v1_blog_post_comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/comments{format}:
    get:
      operationId: api_v1_blog_post_comments_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/update_likes:
    post:
      operationId: api_v1_blog_post_update_likes_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/update_likes{format}:
    post:
      operationId: api_v1_blog_post_update_likes_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/update_view_count:
    post:
      operationId: api_v1_blog_post_update_view_count_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/post/{id}/update_view_count{format}:
    post:
      operationId: api_v1_blog_post_update_view_count_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogPost'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogPost'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: ''
  /api/v1/blog/tag:
    get:
      operationId: api_v1_blog_tag_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogTagList'
          description: ''
    post:
      operationId: api_v1_blog_tag_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogTag'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
  /api/v1/blog/tag{format}:
    get:
      operationId: api_v1_blog_tag_formatted_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlogTagList'
          description: ''
    post:
      operationId: api_v1_blog_tag_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogTag'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
  /api/v1/blog/tag/{id}:
    get:
      operationId: api_v1_blog_tag_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    put:
      operationId: api_v1_blog_tag_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogTag'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    patch:
      operationId: api_v1_blog_tag_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    delete:
      operationId: api_v1_blog_tag_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/blog/tag/{id}{format}:
    get:
      operationId: api_v1_blog_tag_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    put:
      operationId: api_v1_blog_tag_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/BlogTag'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    patch:
      operationId: api_v1_blog_tag_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlogTag'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogTag'
          description: ''
    delete:
      operationId: api_v1_blog_tag_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/cart:
    get:
      operationId: api_v1_cart_retrieve
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    put:
      operationId: api_v1_cart_update
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    patch:
      operationId: api_v1_cart_partial_update
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: api_v1_cart_destroy
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/cart{format}:
    get:
      operationId: api_v1_cart_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    put:
      operationId: api_v1_cart_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    patch:
      operationId: api_v1_cart_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: api_v1_cart_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/cart/item:
    get:
      operationId: api_v1_cart_item_list
      parameters:
      - in: query
        name: cart
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartItemList'
          description: ''
    post:
      operationId: api_v1_cart_item_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/v1/cart/item{format}:
    get:
      operationId: api_v1_cart_item_formatted_list
      parameters:
      - in: query
        name: cart
        schema:
          type: integer
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCartItemList'
          description: ''
    post:
      operationId: api_v1_cart_item_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
  /api/v1/cart/item/{id}:
    get:
      operationId: api_v1_cart_item_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    put:
      operationId: api_v1_cart_item_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    patch:
      operationId: api_v1_cart_item_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    delete:
      operationId: api_v1_cart_item_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/cart/item/{id}{format}:
    get:
      operationId: api_v1_cart_item_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    put:
      operationId: api_v1_cart_item_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    patch:
      operationId: api_v1_cart_item_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCartItem'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
          description: ''
    delete:
      operationId: api_v1_cart_item_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/checkout:
    post:
      operationId: api_v1_checkout_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Checkout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Checkout'
          application/json:
            schema:
              $ref: '#/components/schemas/Checkout'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkout'
          description: ''
  /api/v1/country:
    get:
      operationId: api_v1_country_list
      parameters:
      - in: query
        name: alpha2
        schema:
          type: string
      - in: query
        name: alpha3
        schema:
          type: string
      - in: query
        name: isoCc
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: phoneCode
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: translations_Name
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
    post:
      operationId: api_v1_country_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/country{format}:
    get:
      operationId: api_v1_country_formatted_list
      parameters:
      - in: query
        name: alpha2
        schema:
          type: string
      - in: query
        name: alpha3
        schema:
          type: string
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: isoCc
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: phoneCode
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: translations_Name
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
    post:
      operationId: api_v1_country_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
  /api/v1/country/{alpha_2}:
    get:
      operationId: api_v1_country_retrieve
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: api_v1_country_update
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: api_v1_country_partial_update
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    delete:
      operationId: api_v1_country_destroy
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/country/{alpha_2}{format}:
    get:
      operationId: api_v1_country_formatted_retrieve
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    put:
      operationId: api_v1_country_formatted_update
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Country'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Country'
          application/json:
            schema:
              $ref: '#/components/schemas/Country'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    patch:
      operationId: api_v1_country_formatted_partial_update
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCountry'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
          description: ''
    delete:
      operationId: api_v1_country_formatted_destroy
      parameters:
      - in: path
        name: alpha2
        schema:
          type: string
          title: Country Code Alpha 2
        description: A unique value identifying this Country.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/notification/user:
    get:
      operationId: api_v1_notification_user_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationUserList'
          description: ''
  /api/v1/notification/user{format}:
    get:
      operationId: api_v1_notification_user_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationUserList'
          description: ''
  /api/v1/notification/user/mark_all_as_seen:
    post:
      operationId: api_v1_notification_user_mark_all_as_seen_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUser'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
  /api/v1/notification/user/mark_all_as_seen{format}:
    post:
      operationId: api_v1_notification_user_mark_all_as_seen_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUser'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
  /api/v1/notification/user/mark_all_as_unseen:
    post:
      operationId: api_v1_notification_user_mark_all_as_unseen_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUser'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
  /api/v1/notification/user/mark_all_as_unseen{format}:
    post:
      operationId: api_v1_notification_user_mark_all_as_unseen_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUser'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUser'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
  /api/v1/notification/user/mark_as_seen:
    post:
      operationId: api_v1_notification_user_mark_as_seen_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUserAction'
          description: ''
  /api/v1/notification/user/mark_as_seen{format}:
    post:
      operationId: api_v1_notification_user_mark_as_seen_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUserAction'
          description: ''
  /api/v1/notification/user/mark_as_unseen:
    post:
      operationId: api_v1_notification_user_mark_as_unseen_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUserAction'
          description: ''
  /api/v1/notification/user/mark_as_unseen{format}:
    post:
      operationId: api_v1_notification_user_mark_as_unseen_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUserAction'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUserAction'
          description: ''
  /api/v1/notification/user/unseen_count:
    get:
      operationId: api_v1_notification_user_unseen_count_retrieve
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
  /api/v1/notification/user/unseen_count{format}:
    get:
      operationId: api_v1_notification_user_unseen_count_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUser'
          description: ''
  /api/v1/order:
    get:
      operationId: api_v1_order_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          default: PENDING
          enum:
          - CANCELED
          - PAID_AND_SENT
          - PENDING
          - SENT
        description: |-
          * `SENT` - Sent
          * `PAID_AND_SENT` - Paid and Sent
          * `CANCELED` - Canceled
          * `PENDING` - Pending
      - in: query
        name: userId
        schema:
          type: integer
          nullable: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: api_v1_order_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateUpdate'
          description: ''
  /api/v1/order/{id}:
    get:
      operationId: api_v1_order_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_v1_order_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreateUpdate'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateUpdate'
          description: ''
    patch:
      operationId: api_v1_order_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreateUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreateUpdate'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderCreateUpdate'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCreateUpdate'
          description: ''
    delete:
      operationId: api_v1_order_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/order/uuid/{uuid}:
    get:
      operationId: api_v1_order_uuid_retrieve
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/pay_way:
    get:
      operationId: api_v1_pay_way_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: cost
        schema:
          type: number
      - in: query
        name: freeForOrderAmount
        schema:
          type: number
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPayWayList'
          description: ''
    post:
      operationId: api_v1_pay_way_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayWay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayWay'
          application/json:
            schema:
              $ref: '#/components/schemas/PayWay'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayWay'
          description: ''
  /api/v1/pay_way/{id}:
    get:
      operationId: api_v1_pay_way_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayWay'
          description: ''
    put:
      operationId: api_v1_pay_way_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayWay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PayWay'
          application/json:
            schema:
              $ref: '#/components/schemas/PayWay'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayWay'
          description: ''
    patch:
      operationId: api_v1_pay_way_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPayWay'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPayWay'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPayWay'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayWay'
          description: ''
    delete:
      operationId: api_v1_pay_way_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product:
    get:
      operationId: api_v1_product_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: maxFinalPrice
        schema:
          type: number
      - in: query
        name: minFinalPrice
        schema:
          type: number
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_v1_product_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product{format}:
    get:
      operationId: api_v1_product_formatted_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: maxFinalPrice
        schema:
          type: number
      - in: query
        name: minFinalPrice
        schema:
          type: number
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
    post:
      operationId: api_v1_product_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/{id}:
    get:
      operationId: api_v1_product_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_v1_product_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_v1_product_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_v1_product_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/{id}{format}:
    get:
      operationId: api_v1_product_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_v1_product_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_v1_product_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_v1_product_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/{id}/images:
    get:
      operationId: api_v1_product_images_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/{id}/images{format}:
    get:
      operationId: api_v1_product_images_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/{id}/reviews:
    get:
      operationId: api_v1_product_reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/{id}/reviews{format}:
    get:
      operationId: api_v1_product_reviews_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/{id}/update_product_hits:
    post:
      operationId: api_v1_product_update_product_hits_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/{id}/update_product_hits{format}:
    post:
      operationId: api_v1_product_update_product_hits_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/product/category:
    get:
      operationId: api_v1_product_category_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductCategoryList'
          description: ''
    post:
      operationId: api_v1_product_category_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
  /api/v1/product/category{format}:
    get:
      operationId: api_v1_product_category_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductCategoryList'
          description: ''
    post:
      operationId: api_v1_product_category_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
  /api/v1/product/category/{id}:
    get:
      operationId: api_v1_product_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    put:
      operationId: api_v1_product_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    patch:
      operationId: api_v1_product_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    delete:
      operationId: api_v1_product_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/category/{id}{format}:
    get:
      operationId: api_v1_product_category_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    put:
      operationId: api_v1_product_category_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategory'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    patch:
      operationId: api_v1_product_category_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductCategory'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
          description: ''
    delete:
      operationId: api_v1_product_category_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/favourite:
    get:
      operationId: api_v1_product_favourite_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productId
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: userId
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductFavouriteList'
          description: ''
    post:
      operationId: api_v1_product_favourite_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
  /api/v1/product/favourite{format}:
    get:
      operationId: api_v1_product_favourite_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productId
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: userId
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductFavouriteList'
          description: ''
    post:
      operationId: api_v1_product_favourite_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
  /api/v1/product/favourite/{id}:
    get:
      operationId: api_v1_product_favourite_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    put:
      operationId: api_v1_product_favourite_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    patch:
      operationId: api_v1_product_favourite_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    delete:
      operationId: api_v1_product_favourite_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/favourite/{id}{format}:
    get:
      operationId: api_v1_product_favourite_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    put:
      operationId: api_v1_product_favourite_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFavourite'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    patch:
      operationId: api_v1_product_favourite_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductFavourite'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFavourite'
          description: ''
    delete:
      operationId: api_v1_product_favourite_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/image:
    get:
      operationId: api_v1_product_image_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: isMain
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: product
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductImageList'
          description: ''
    post:
      operationId: api_v1_product_image_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/v1/product/image{format}:
    get:
      operationId: api_v1_product_image_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: isMain
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: product
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductImageList'
          description: ''
    post:
      operationId: api_v1_product_image_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
  /api/v1/product/image/{id}:
    get:
      operationId: api_v1_product_image_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    put:
      operationId: api_v1_product_image_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: api_v1_product_image_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    delete:
      operationId: api_v1_product_image_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/image/{id}{format}:
    get:
      operationId: api_v1_product_image_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    put:
      operationId: api_v1_product_image_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductImage'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    patch:
      operationId: api_v1_product_image_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductImage'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
          description: ''
    delete:
      operationId: api_v1_product_image_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/product/review:
    get:
      operationId: api_v1_product_review_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productId
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          default: NEW
          enum:
          - 'FALSE'
          - NEW
          - 'TRUE'
        description: |-
          * `NEW` - New
          * `TRUE` - True
          * `FALSE` - False
      - in: query
        name: userId
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductReviewList'
          description: ''
    post:
      operationId: api_v1_product_review_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/product/review{format}:
    get:
      operationId: api_v1_product_review_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: productId
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          default: NEW
          enum:
          - 'FALSE'
          - NEW
          - 'TRUE'
        description: |-
          * `NEW` - New
          * `TRUE` - True
          * `FALSE` - False
      - in: query
        name: userId
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductReviewList'
          description: ''
    post:
      operationId: api_v1_product_review_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/product/review/{id}:
    get:
      operationId: api_v1_product_review_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    put:
      operationId: api_v1_product_review_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    patch:
      operationId: api_v1_product_review_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    delete:
      operationId: api_v1_product_review_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/product/review/{id}{format}:
    get:
      operationId: api_v1_product_review_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    put:
      operationId: api_v1_product_review_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    patch:
      operationId: api_v1_product_review_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductReview'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
    delete:
      operationId: api_v1_product_review_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/product/review/user_product_review:
    post:
      operationId: api_v1_product_review_user_product_review_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/product/review/user_product_review{format}:
    post:
      operationId: api_v1_product_review_user_product_review_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductReview'
          application/json:
            schema:
              $ref: '#/components/schemas/ProductReview'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReview'
          description: ''
  /api/v1/region:
    get:
      operationId: api_v1_region_list
      parameters:
      - in: query
        name: alpha
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: string
          title: Country Code Alpha 2
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegionList'
          description: ''
    post:
      operationId: api_v1_region_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/region{format}:
    get:
      operationId: api_v1_region_formatted_list
      parameters:
      - in: query
        name: alpha
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: string
          title: Country Code Alpha 2
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegionList'
          description: ''
    post:
      operationId: api_v1_region_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/region/{alpha}:
    get:
      operationId: api_v1_region_retrieve
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    put:
      operationId: api_v1_region_update
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    patch:
      operationId: api_v1_region_partial_update
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    delete:
      operationId: api_v1_region_destroy
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/region/{alpha}{format}:
    get:
      operationId: api_v1_region_formatted_retrieve
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    put:
      operationId: api_v1_region_formatted_update
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Region'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Region'
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    patch:
      operationId: api_v1_region_formatted_partial_update
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRegion'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
    delete:
      operationId: api_v1_region_formatted_destroy
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/region/{alpha}/get_regions_by_country_alpha_2:
    get:
      operationId: api_v1_region_get_regions_by_country_alpha_2_retrieve
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/region/{alpha}/get_regions_by_country_alpha_2{format}:
    get:
      operationId: api_v1_region_get_regions_by_country_alpha_2_formatted_retrieve
      parameters:
      - in: path
        name: alpha
        schema:
          type: string
          title: Region Code
        description: A unique value identifying this Region.
        required: true
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: ''
  /api/v1/search/product:
    get:
      operationId: api_v1_search_product_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSearchProductList'
          description: ''
  /api/v1/search/product{format}:
    get:
      operationId: api_v1_search_product_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSearchProductList'
          description: ''
  /api/v1/settings/:
    get:
      operationId: api_v1_settings_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSettingsList'
          description: ''
    post:
      operationId: api_v1_settings_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Settings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Settings'
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
  /api/v1/settings/{key}/:
    get:
      operationId: api_v1_settings_retrieve
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
    put:
      operationId: api_v1_settings_update
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Settings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Settings'
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
    patch:
      operationId: api_v1_settings_partial_update
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
    delete:
      operationId: api_v1_settings_destroy
      parameters:
      - in: path
        name: key
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/slide:
    get:
      operationId: api_v1_slide_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slider
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlideList'
          description: ''
    post:
      operationId: api_v1_slide_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
          application/json:
            schema:
              $ref: '#/components/schemas/Slide'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
  /api/v1/slide{format}:
    get:
      operationId: api_v1_slide_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: slider
        schema:
          type: integer
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlideList'
          description: ''
    post:
      operationId: api_v1_slide_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
          application/json:
            schema:
              $ref: '#/components/schemas/Slide'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
  /api/v1/slide/{id}:
    get:
      operationId: api_v1_slide_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    put:
      operationId: api_v1_slide_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
          application/json:
            schema:
              $ref: '#/components/schemas/Slide'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    patch:
      operationId: api_v1_slide_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    delete:
      operationId: api_v1_slide_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/slide/{id}{format}:
    get:
      operationId: api_v1_slide_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    put:
      operationId: api_v1_slide_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slide'
          application/json:
            schema:
              $ref: '#/components/schemas/Slide'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    patch:
      operationId: api_v1_slide_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlide'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slide'
          description: ''
    delete:
      operationId: api_v1_slide_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/slider:
    get:
      operationId: api_v1_slider_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSliderList'
          description: ''
    post:
      operationId: api_v1_slider_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slider'
          application/json:
            schema:
              $ref: '#/components/schemas/Slider'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
  /api/v1/slider{format}:
    get:
      operationId: api_v1_slider_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSliderList'
          description: ''
    post:
      operationId: api_v1_slider_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slider'
          application/json:
            schema:
              $ref: '#/components/schemas/Slider'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
  /api/v1/slider/{id}:
    get:
      operationId: api_v1_slider_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    put:
      operationId: api_v1_slider_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slider'
          application/json:
            schema:
              $ref: '#/components/schemas/Slider'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    patch:
      operationId: api_v1_slider_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    delete:
      operationId: api_v1_slider_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/slider/{id}{format}:
    get:
      operationId: api_v1_slider_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    put:
      operationId: api_v1_slider_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Slider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Slider'
          application/json:
            schema:
              $ref: '#/components/schemas/Slider'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    patch:
      operationId: api_v1_slider_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSlider'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Slider'
          description: ''
    delete:
      operationId: api_v1_slider_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/tip:
    get:
      operationId: api_v1_tip_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: kind
        schema:
          type: string
          enum:
          - ERROR
          - INFO
          - SUCCESS
          - WARNING
        description: |-
          * `SUCCESS` - Success
          * `INFO` - Info
          * `ERROR` - Error
          * `WARNING` - Warning
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTipList'
          description: ''
    post:
      operationId: api_v1_tip_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tip'
          application/json:
            schema:
              $ref: '#/components/schemas/Tip'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
  /api/v1/tip{format}:
    get:
      operationId: api_v1_tip_formatted_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: kind
        schema:
          type: string
          enum:
          - ERROR
          - INFO
          - SUCCESS
          - WARNING
        description: |-
          * `SUCCESS` - Success
          * `INFO` - Info
          * `ERROR` - Error
          * `WARNING` - Warning
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTipList'
          description: ''
    post:
      operationId: api_v1_tip_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tip'
          application/json:
            schema:
              $ref: '#/components/schemas/Tip'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
  /api/v1/tip/{id}:
    get:
      operationId: api_v1_tip_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    put:
      operationId: api_v1_tip_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tip'
          application/json:
            schema:
              $ref: '#/components/schemas/Tip'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    patch:
      operationId: api_v1_tip_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTip'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTip'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    delete:
      operationId: api_v1_tip_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/tip/{id}{format}:
    get:
      operationId: api_v1_tip_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    put:
      operationId: api_v1_tip_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tip'
          application/json:
            schema:
              $ref: '#/components/schemas/Tip'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    patch:
      operationId: api_v1_tip_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTip'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTip'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tip'
          description: ''
    delete:
      operationId: api_v1_tip_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/user/account:
    get:
      operationId: api_v1_user_account_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticationList'
          description: ''
    post:
      operationId: api_v1_user_account_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authentication'
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
  /api/v1/user/account{format}:
    get:
      operationId: api_v1_user_account_formatted_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAuthenticationList'
          description: ''
    post:
      operationId: api_v1_user_account_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authentication'
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
  /api/v1/user/account/{id}:
    get:
      operationId: api_v1_user_account_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
    put:
      operationId: api_v1_user_account_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authentication'
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
    patch:
      operationId: api_v1_user_account_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
    delete:
      operationId: api_v1_user_account_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/account/{id}{format}:
    get:
      operationId: api_v1_user_account_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
    put:
      operationId: api_v1_user_account_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Authentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Authentication'
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
    patch:
      operationId: api_v1_user_account_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAuthentication'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
    delete:
      operationId: api_v1_user_account_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/account/{id}/details:
    get:
      operationId: api_v1_user_account_details_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
  /api/v1/user/account/{id}/details{format}:
    get:
      operationId: api_v1_user_account_details_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication'
          description: ''
  /api/v1/user/address:
    get:
      operationId: api_v1_user_address_list
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: string
          title: Country Code Alpha 2
      - in: query
        name: floor
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        description: |-
          * `0` - Basement
          * `1` - Ground Floor
          * `2` - First Floor
          * `3` - Second Floor
          * `4` - Third Floor
          * `5` - Fourth Floor
          * `6` - Fifth Floor
          * `7` - Sixth Floor Plus
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: isMain
        schema:
          type: boolean
      - in: query
        name: locationType
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
          - 2
        description: |-
          * `0` - Home
          * `1` - Office
          * `2` - Other
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: street
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      - in: query
        name: zipcode
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserAddressList'
          description: ''
    post:
      operationId: api_v1_user_address_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/user/address{format}:
    get:
      operationId: api_v1_user_address_formatted_list
      parameters:
      - in: query
        name: city
        schema:
          type: string
      - in: query
        name: country
        schema:
          type: string
          title: Country Code Alpha 2
      - in: query
        name: floor
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
        description: |-
          * `0` - Basement
          * `1` - Ground Floor
          * `2` - First Floor
          * `3` - Second Floor
          * `4` - Third Floor
          * `5` - Fourth Floor
          * `6` - Fifth Floor
          * `7` - Sixth Floor Plus
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: isMain
        schema:
          type: boolean
      - in: query
        name: locationType
        schema:
          type: integer
          nullable: true
          enum:
          - 0
          - 1
          - 2
        description: |-
          * `0` - Home
          * `1` - Office
          * `2` - Other
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: street
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      - in: query
        name: zipcode
        schema:
          type: string
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserAddressList'
          description: ''
    post:
      operationId: api_v1_user_address_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/user/address/{id}:
    get:
      operationId: api_v1_user_address_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    put:
      operationId: api_v1_user_address_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    patch:
      operationId: api_v1_user_address_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    delete:
      operationId: api_v1_user_address_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/address/{id}{format}:
    get:
      operationId: api_v1_user_address_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    put:
      operationId: api_v1_user_address_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    patch:
      operationId: api_v1_user_address_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAddress'
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
    delete:
      operationId: api_v1_user_address_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/address/{id}/set_main:
    post:
      operationId: api_v1_user_address_set_main_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/user/address/{id}/set_main{format}:
    post:
      operationId: api_v1_user_address_set_main_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAddress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAddress'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: ''
  /api/v1/vat:
    get:
      operationId: api_v1_vat_list
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: value
        schema:
          type: number
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVatList'
          description: ''
    post:
      operationId: api_v1_vat_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vat'
          application/json:
            schema:
              $ref: '#/components/schemas/Vat'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
  /api/v1/vat{format}:
    get:
      operationId: api_v1_vat_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: id
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: value
        schema:
          type: number
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVatList'
          description: ''
    post:
      operationId: api_v1_vat_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vat'
          application/json:
            schema:
              $ref: '#/components/schemas/Vat'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
  /api/v1/vat/{id}:
    get:
      operationId: api_v1_vat_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    put:
      operationId: api_v1_vat_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vat'
          application/json:
            schema:
              $ref: '#/components/schemas/Vat'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    patch:
      operationId: api_v1_vat_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVat'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVat'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    delete:
      operationId: api_v1_vat_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/vat/{id}{format}:
    get:
      operationId: api_v1_vat_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    put:
      operationId: api_v1_vat_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vat'
          application/json:
            schema:
              $ref: '#/components/schemas/Vat'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    patch:
      operationId: api_v1_vat_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVat'
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVat'
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vat'
          description: ''
    delete:
      operationId: api_v1_vat_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    ActivateTOTP:
      type: object
      properties:
        code:
          type: string
          title: Authenticator code
      required:
      - code
    ActiveUsersCount:
      type: object
      properties:
        activeUsers:
          type: integer
      required:
      - activeUsers
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    AuthenticateTOTP:
      type: object
      properties:
        code:
          type: string
      required:
      - code
    Authentication:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: Id
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        firstName:
          type: string
          nullable: true
          maxLength: 255
        lastName:
          type: string
          nullable: true
          maxLength: 255
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        phone:
          type: string
        city:
          type: string
          nullable: true
          maxLength: 255
        zipcode:
          type: string
          nullable: true
          title: Zip Code
          maxLength: 255
        address:
          type: string
          nullable: true
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          title: Region Code
          nullable: true
        isActive:
          type: boolean
          default: true
          title: Active
        isStaff:
          type: boolean
          default: false
          title: Staff
        birthDate:
          type: string
          format: date
          nullable: true
        twitter:
          type: string
          format: uri
          nullable: true
          title: Twitter Profile
          maxLength: 200
        linkedin:
          type: string
          format: uri
          nullable: true
          title: LinkedIn Profile
          maxLength: 200
        facebook:
          type: string
          format: uri
          nullable: true
          title: Facebook Profile
          maxLength: 200
        instagram:
          type: string
          format: uri
          nullable: true
          title: Instagram Profile
          maxLength: 200
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        youtube:
          type: string
          format: uri
          nullable: true
          title: Youtube Profile
          maxLength: 200
        github:
          type: string
          format: uri
          nullable: true
          title: Github Profile
          maxLength: 200
        bio:
          type: string
          nullable: true
        mainImageFilename:
          type: string
          readOnly: true
        isSuperuser:
          type: boolean
          default: false
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - createdAt
      - email
      - id
      - mainImageFilename
      - pk
      - updatedAt
      - uuid
    AuthenticationLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    AuthenticationPasswordChange:
      type: object
      properties:
        newPassword1:
          type: string
          maxLength: 128
        newPassword2:
          type: string
          maxLength: 128
      required:
      - newPassword1
      - newPassword2
    AuthenticationPasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    AuthenticationPasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        newPassword1:
          type: string
          maxLength: 128
        newPassword2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - newPassword1
      - newPassword2
      - token
      - uid
    AuthenticationRegister:
      type: object
      properties:
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password1
      - password2
    BlankEnum:
      enum:
      - ''
    BlogAuthor:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                bio:
                  type: string
            de:
              type: object
              properties:
                bio:
                  type: string
            el:
              type: object
              properties:
                bio:
                  type: string
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        numberOfPosts:
          type: integer
          readOnly: true
        totalLikesReceived:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - createdAt
      - id
      - numberOfPosts
      - totalLikesReceived
      - translations
      - updatedAt
      - user
      - uuid
    BlogCategory:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        children:
          oneOf:
          - type: object
            additionalProperties: {}
          - type: array
            items: {}
          readOnly: true
        parent:
          type: integer
          nullable: true
        level:
          type: integer
          readOnly: true
        treeId:
          type: integer
          readOnly: true
        absoluteUrl:
          type: string
          readOnly: true
        recursivePostCount:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
      required:
      - absoluteUrl
      - children
      - createdAt
      - id
      - level
      - mainImageAbsoluteUrl
      - mainImageFilename
      - recursivePostCount
      - slug
      - sortOrder
      - translations
      - treeId
      - updatedAt
      - uuid
    BlogComment:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                content:
                  type: string
            de:
              type: object
              properties:
                content:
                  type: string
            el:
              type: object
              properties:
                content:
                  type: string
        id:
          type: integer
          readOnly: true
        isApproved:
          type: boolean
          default: false
        likes:
          type: array
          items:
            type: integer
        user:
          type: integer
        post:
          type: integer
        children:
          oneOf:
          - type: object
            additionalProperties: {}
          - type: array
            items: {}
          readOnly: true
        parent:
          type: integer
          nullable: true
        level:
          type: integer
          readOnly: true
        treeId:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        likesCount:
          type: integer
          readOnly: true
        repliesCount:
          type: integer
          readOnly: true
      required:
      - children
      - createdAt
      - id
      - level
      - likes
      - likesCount
      - post
      - repliesCount
      - translations
      - treeId
      - updatedAt
      - user
      - uuid
    BlogPost:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        likes:
          type: array
          items:
            type: integer
        category:
          type: integer
        tags:
          type: array
          items:
            type: integer
        author:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/BlogPostStatusEnum'
          default: DRAFT
        featured:
          type: boolean
          default: false
        viewCount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 0
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        isPublished:
          type: boolean
          default: false
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        likesCount:
          type: integer
          readOnly: true
        commentsCount:
          type: integer
          readOnly: true
        tagsCount:
          type: integer
          readOnly: true
        absoluteUrl:
          type: string
          readOnly: true
      required:
      - absoluteUrl
      - author
      - category
      - commentsCount
      - createdAt
      - id
      - likes
      - likesCount
      - mainImageAbsoluteUrl
      - mainImageFilename
      - slug
      - tags
      - tagsCount
      - translations
      - updatedAt
      - uuid
    BlogPostStatusEnum:
      enum:
      - DRAFT
      - PUBLISHED
      - ARCHIVED
      type: string
      description: |-
        * `DRAFT` - Draft
        * `PUBLISHED` - Published
        * `ARCHIVED` - Archived
    BlogTag:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
        id:
          type: integer
          readOnly: true
        active:
          type: boolean
          default: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        getTagPostsCount:
          type: integer
          readOnly: true
      required:
      - createdAt
      - getTagPostsCount
      - id
      - sortOrder
      - translations
      - updatedAt
      - uuid
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        totalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalDiscountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalVatValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalItems:
          type: integer
          readOnly: true
        totalItemsUnique:
          type: integer
          readOnly: true
        cartItems:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - cartItems
      - createdAt
      - id
      - totalDiscountValue
      - totalItems
      - totalItemsUnique
      - totalPrice
      - totalVatValue
      - updatedAt
      - uuid
    CartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cart:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 1
        price:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        finalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        discountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        priceSavePercent:
          type: number
          format: double
          readOnly: true
        discountPercent:
          type: number
          format: double
          readOnly: true
        vatPercent:
          oneOf:
          - type: number
            format: double
          - type: integer
          readOnly: true
        vatValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalDiscountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - cart
      - createdAt
      - discountPercent
      - discountValue
      - finalPrice
      - id
      - price
      - priceSavePercent
      - product
      - totalDiscountValue
      - totalPrice
      - updatedAt
      - uuid
      - vatPercent
      - vatValue
    Checkout:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          title: Region Code
          nullable: true
        floor:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        payWay:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          default: PENDING
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        zipcode:
          type: string
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 255
        phone:
          type: string
        mobilePhone:
          type: string
        paidAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        customerNotes:
          type: string
          nullable: true
        orderItemOrder:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutItem'
        shippingPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        documentType:
          allOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          default: RECEIPT
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        totalPriceItems:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalPriceExtra:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        fullAddress:
          type: string
          readOnly: true
      required:
      - city
      - createdAt
      - email
      - firstName
      - fullAddress
      - id
      - lastName
      - orderItemOrder
      - phone
      - shippingPrice
      - street
      - streetNumber
      - totalPriceExtra
      - totalPriceItems
      - updatedAt
      - uuid
      - zipcode
    CheckoutItem:
      type: object
      properties:
        product:
          type: integer
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
      required:
      - product
    Country:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        alpha2:
          type: string
          title: Country Code Alpha 2
          pattern: ^[A-Z]{2}$
          maxLength: 2
        alpha3:
          type: string
          title: Country Code Alpha 3
          pattern: ^[A-Z]{3}$
          maxLength: 3
        isoCc:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: ISO Country Code
        phoneCode:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
      required:
      - alpha2
      - alpha3
      - createdAt
      - mainImageAbsoluteUrl
      - mainImageFilename
      - sortOrder
      - translations
      - updatedAt
      - uuid
    DocumentTypeEnum:
      enum:
      - RECEIPT
      - INVOICE
      type: string
      description: |-
        * `RECEIPT` - Receipt
        * `INVOICE` - Invoice
    FloorEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      type: integer
      description: |-
        * `0` - Basement
        * `1` - Ground Floor
        * `2` - First Floor
        * `3` - Second Floor
        * `4` - Third Floor
        * `5` - Fourth Floor
        * `6` - Fifth Floor
        * `7` - Sixth Floor Plus
    KindEnum:
      enum:
      - SUCCESS
      - INFO
      - ERROR
      - WARNING
      type: string
      description: |-
        * `SUCCESS` - Success
        * `INFO` - Info
        * `ERROR` - Error
        * `WARNING` - Warning
    LocationTypeEnum:
      enum:
      - 0
      - 1
      - 2
      type: integer
      description: |-
        * `0` - Home
        * `1` - Office
        * `2` - Other
    NotificationUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        notification:
          type: integer
        seen:
          type: boolean
          default: false
      required:
      - id
      - notification
      - user
    NotificationUserAction:
      type: object
      properties:
        notificationUserId:
          type: integer
      required:
      - notificationUserId
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        country:
          allOf:
          - $ref: '#/components/schemas/Country'
          readOnly: true
        region:
          allOf:
          - $ref: '#/components/schemas/Region'
          readOnly: true
        floor:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        payWay:
          allOf:
          - $ref: '#/components/schemas/PayWay'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          default: PENDING
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        zipcode:
          type: string
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 255
        phone:
          type: string
        mobilePhone:
          type: string
        customerNotes:
          type: string
          nullable: true
        paidAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        orderItemOrder:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        shippingPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        documentType:
          allOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          default: RECEIPT
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        totalPriceItems:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalPriceExtra:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        fullAddress:
          type: string
          readOnly: true
      required:
      - city
      - country
      - createdAt
      - email
      - firstName
      - fullAddress
      - id
      - lastName
      - orderItemOrder
      - payWay
      - phone
      - region
      - shippingPrice
      - street
      - streetNumber
      - totalPriceExtra
      - totalPriceItems
      - updatedAt
      - uuid
      - zipcode
    OrderCreateUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          title: Region Code
          nullable: true
        floor:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        payWay:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          default: PENDING
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        zipcode:
          type: string
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 255
        phone:
          type: string
        mobilePhone:
          type: string
        paidAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        customerNotes:
          type: string
          nullable: true
        orderItemOrder:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreateUpdate'
        shippingPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        documentType:
          allOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          default: RECEIPT
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        totalPriceItems:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalPriceExtra:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        fullAddress:
          type: string
          readOnly: true
      required:
      - city
      - createdAt
      - email
      - firstName
      - fullAddress
      - id
      - lastName
      - orderItemOrder
      - phone
      - shippingPrice
      - street
      - streetNumber
      - totalPriceExtra
      - totalPriceItems
      - updatedAt
      - uuid
      - zipcode
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        price:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        totalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
      required:
      - createdAt
      - id
      - price
      - product
      - sortOrder
      - totalPrice
      - updatedAt
      - uuid
    OrderItemCreateUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        price:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 1
      required:
      - id
      - price
      - product
    OrderStatusEnum:
      enum:
      - SENT
      - PAID_AND_SENT
      - CANCELED
      - PENDING
      type: string
      description: |-
        * `SENT` - Sent
        * `PAID_AND_SENT` - Paid and Sent
        * `CANCELED` - Canceled
        * `PENDING` - Pending
    PaginatedAuthenticationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Authentication'
    PaginatedBlogAuthorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogAuthor'
    PaginatedBlogCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogCategory'
    PaginatedBlogCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogComment'
    PaginatedBlogPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogPost'
    PaginatedBlogTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BlogTag'
    PaginatedCartItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
    PaginatedCountryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PaginatedNotificationUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationUser'
    PaginatedOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedPayWayList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PayWay'
    PaginatedProductCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
    PaginatedProductFavouriteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductFavourite'
    PaginatedProductImageList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
    PaginatedProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProductReviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductReview'
    PaginatedRegionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Region'
    PaginatedSearchProductList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchProduct'
    PaginatedSettingsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Settings'
    PaginatedSlideList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Slide'
    PaginatedSliderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Slider'
    PaginatedTipList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tip'
    PaginatedUserAddressList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserAddress'
    PaginatedVatList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vat'
    PatchedAuthentication:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: Id
        email:
          type: string
          format: email
          title: Email Address
          maxLength: 254
        firstName:
          type: string
          nullable: true
          maxLength: 255
        lastName:
          type: string
          nullable: true
          maxLength: 255
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        phone:
          type: string
        city:
          type: string
          nullable: true
          maxLength: 255
        zipcode:
          type: string
          nullable: true
          title: Zip Code
          maxLength: 255
        address:
          type: string
          nullable: true
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          title: Region Code
          nullable: true
        isActive:
          type: boolean
          default: true
          title: Active
        isStaff:
          type: boolean
          default: false
          title: Staff
        birthDate:
          type: string
          format: date
          nullable: true
        twitter:
          type: string
          format: uri
          nullable: true
          title: Twitter Profile
          maxLength: 200
        linkedin:
          type: string
          format: uri
          nullable: true
          title: LinkedIn Profile
          maxLength: 200
        facebook:
          type: string
          format: uri
          nullable: true
          title: Facebook Profile
          maxLength: 200
        instagram:
          type: string
          format: uri
          nullable: true
          title: Instagram Profile
          maxLength: 200
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        youtube:
          type: string
          format: uri
          nullable: true
          title: Youtube Profile
          maxLength: 200
        github:
          type: string
          format: uri
          nullable: true
          title: Github Profile
          maxLength: 200
        bio:
          type: string
          nullable: true
        mainImageFilename:
          type: string
          readOnly: true
        isSuperuser:
          type: boolean
          default: false
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedBlogAuthor:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                bio:
                  type: string
            de:
              type: object
              properties:
                bio:
                  type: string
            el:
              type: object
              properties:
                bio:
                  type: string
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        numberOfPosts:
          type: integer
          readOnly: true
        totalLikesReceived:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedBlogCategory:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        children:
          oneOf:
          - type: object
            additionalProperties: {}
          - type: array
            items: {}
          readOnly: true
        parent:
          type: integer
          nullable: true
        level:
          type: integer
          readOnly: true
        treeId:
          type: integer
          readOnly: true
        absoluteUrl:
          type: string
          readOnly: true
        recursivePostCount:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
    PatchedBlogComment:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                content:
                  type: string
            de:
              type: object
              properties:
                content:
                  type: string
            el:
              type: object
              properties:
                content:
                  type: string
        id:
          type: integer
          readOnly: true
        isApproved:
          type: boolean
          default: false
        likes:
          type: array
          items:
            type: integer
        user:
          type: integer
        post:
          type: integer
        children:
          oneOf:
          - type: object
            additionalProperties: {}
          - type: array
            items: {}
          readOnly: true
        parent:
          type: integer
          nullable: true
        level:
          type: integer
          readOnly: true
        treeId:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        likesCount:
          type: integer
          readOnly: true
        repliesCount:
          type: integer
          readOnly: true
    PatchedBlogPost:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        likes:
          type: array
          items:
            type: integer
        category:
          type: integer
        tags:
          type: array
          items:
            type: integer
        author:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/BlogPostStatusEnum'
          default: DRAFT
        featured:
          type: boolean
          default: false
        viewCount:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          default: 0
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        isPublished:
          type: boolean
          default: false
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        likesCount:
          type: integer
          readOnly: true
        commentsCount:
          type: integer
          readOnly: true
        tagsCount:
          type: integer
          readOnly: true
        absoluteUrl:
          type: string
          readOnly: true
    PatchedBlogTag:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                subtitle:
                  type: string
                body:
                  type: string
        id:
          type: integer
          readOnly: true
        active:
          type: boolean
          default: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        getTagPostsCount:
          type: integer
          readOnly: true
    PatchedCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        totalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalDiscountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalVatValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalItems:
          type: integer
          readOnly: true
        totalItemsUnique:
          type: integer
          readOnly: true
        cartItems:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedCartItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        cart:
          type: integer
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/Product'
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 1
        price:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        finalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        discountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        priceSavePercent:
          type: number
          format: double
          readOnly: true
        discountPercent:
          type: number
          format: double
          readOnly: true
        vatPercent:
          oneOf:
          - type: number
            format: double
          - type: integer
          readOnly: true
        vatValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalDiscountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedCountry:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        alpha2:
          type: string
          title: Country Code Alpha 2
          pattern: ^[A-Z]{2}$
          maxLength: 2
        alpha3:
          type: string
          title: Country Code Alpha 3
          pattern: ^[A-Z]{3}$
          maxLength: 3
        isoCc:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: ISO Country Code
        phoneCode:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
    PatchedOrderCreateUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          nullable: true
        country:
          type: string
          title: Country Code Alpha 2
          nullable: true
        region:
          type: string
          title: Region Code
          nullable: true
        floor:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        payWay:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/OrderStatusEnum'
          default: PENDING
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        zipcode:
          type: string
          maxLength: 255
        place:
          type: string
          nullable: true
          maxLength: 255
        city:
          type: string
          maxLength: 255
        phone:
          type: string
        mobilePhone:
          type: string
        paidAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        customerNotes:
          type: string
          nullable: true
        orderItemOrder:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemCreateUpdate'
        shippingPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        documentType:
          allOf:
          - $ref: '#/components/schemas/DocumentTypeEnum'
          default: RECEIPT
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        totalPriceItems:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        totalPriceExtra:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        fullAddress:
          type: string
          readOnly: true
    PatchedPayWay:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        id:
          type: integer
          readOnly: true
        active:
          type: boolean
          default: true
        cost:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        freeForOrderAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        icon:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        iconAbsoluteUrl:
          type: string
          readOnly: true
        iconFilename:
          type: string
          readOnly: true
    PatchedProduct:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        category:
          type: integer
        absoluteUrl:
          type: string
          readOnly: true
        price:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        vat:
          type: integer
        vatPercent:
          oneOf:
          - type: number
            format: double
          - type: integer
          readOnly: true
        vatValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        finalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        hits:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 0
        likesCount:
          type: integer
          readOnly: true
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 0
        active:
          type: boolean
          default: true
        weight:
          type: object
          properties:
            unit:
              type: string
            value:
              type: number
          example:
            unit: kg
            value: 1.0
          nullable: true
        seoTitle:
          type: string
          nullable: true
          maxLength: 70
        seoDescription:
          type: string
          nullable: true
          maxLength: 300
        seoKeywords:
          type: string
          nullable: true
          maxLength: 255
        uuid:
          type: string
          format: uuid
          readOnly: true
        discountPercent:
          type: number
          format: double
          maximum: 100.0
          minimum: 0.0
          default: 0.00
        discountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        priceSavePercent:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        reviewAverage:
          type: number
          format: double
          readOnly: true
        reviewCount:
          type: integer
          readOnly: true
    PatchedProductCategory:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        categoryMenuImageOneAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuImageOneFilename:
          type: string
          readOnly: true
        categoryMenuImageTwoAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuImageTwoFilename:
          type: string
          readOnly: true
        categoryMenuMainBannerAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuMainBannerFilename:
          type: string
          readOnly: true
        children:
          oneOf:
          - type: object
            additionalProperties: {}
          - type: array
            items: {}
          readOnly: true
        parent:
          type: integer
          nullable: true
        level:
          type: integer
          readOnly: true
        treeId:
          type: integer
          readOnly: true
        absoluteUrl:
          type: string
          readOnly: true
        recursiveProductCount:
          type: integer
          readOnly: true
        seoTitle:
          type: string
          nullable: true
          maxLength: 70
        seoDescription:
          type: string
          nullable: true
          maxLength: 300
        seoKeywords:
          type: string
          nullable: true
          maxLength: 255
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedProductFavourite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        product:
          type: integer
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedProductImage:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        image:
          type: string
          format: uri
        thumbnail:
          type: string
          format: uri
          nullable: true
        isMain:
          type: boolean
          default: false
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
    PatchedProductReview:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                comment:
                  type: string
            de:
              type: object
              properties:
                comment:
                  type: string
            el:
              type: object
              properties:
                comment:
                  type: string
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        user:
          type: integer
        rate:
          allOf:
          - $ref: '#/components/schemas/RateEnum'
          minimum: 0
          maximum: 32767
        status:
          allOf:
          - $ref: '#/components/schemas/ProductReviewStatusEnum'
          default: NEW
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        isPublished:
          type: boolean
          default: false
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedRegion:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        alpha:
          type: string
          title: Region Code
          maxLength: 10
        country:
          type: string
          title: Country Code Alpha 2
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedSettings:
      type: object
      properties:
        site:
          type: integer
        key:
          type: string
          maxLength: 255
        value:
          type: string
        valueType:
          allOf:
          - $ref: '#/components/schemas/ValueTypeEnum'
          default: str
        description:
          type: string
          nullable: true
        isPublic:
          type: boolean
          default: true
    PatchedSlide:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
        id:
          type: integer
          readOnly: true
        slider:
          type: integer
        discount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          default: 0.00
        showButton:
          type: boolean
          default: false
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedSlider:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        video:
          type: string
          format: uri
          nullable: true
    PatchedTip:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
        kind:
          $ref: '#/components/schemas/KindEnum'
        icon:
          type: string
          format: uri
          nullable: true
        active:
          type: boolean
          default: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PatchedUserAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        zipcode:
          type: string
          title: Zip Code
          maxLength: 255
        floor:
          nullable: true
          minimum: 0
          maximum: 32767
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          minimum: 0
          maximum: 32767
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone:
          type: string
        mobilePhone:
          type: string
        notes:
          type: string
          nullable: true
          maxLength: 255
        isMain:
          type: boolean
          default: false
        user:
          type: integer
        country:
          type: string
          title: Country Code Alpha 2
        region:
          type: string
          title: Region Code
    PatchedVat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
    PayWay:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        id:
          type: integer
          readOnly: true
        active:
          type: boolean
          default: true
        cost:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        freeForOrderAmount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        icon:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        iconAbsoluteUrl:
          type: string
          readOnly: true
        iconFilename:
          type: string
          readOnly: true
      required:
      - cost
      - createdAt
      - freeForOrderAmount
      - iconAbsoluteUrl
      - iconFilename
      - id
      - sortOrder
      - translations
      - updatedAt
      - uuid
    Product:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        category:
          type: integer
        absoluteUrl:
          type: string
          readOnly: true
        price:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        vat:
          type: integer
        vatPercent:
          oneOf:
          - type: number
            format: double
          - type: integer
          readOnly: true
        vatValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        finalPrice:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        hits:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 0
        likesCount:
          type: integer
          readOnly: true
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 0
        active:
          type: boolean
          default: true
        weight:
          type: object
          properties:
            unit:
              type: string
            value:
              type: number
          example:
            unit: kg
            value: 1.0
          nullable: true
        seoTitle:
          type: string
          nullable: true
          maxLength: 70
        seoDescription:
          type: string
          nullable: true
          maxLength: 300
        seoKeywords:
          type: string
          nullable: true
          maxLength: 255
        uuid:
          type: string
          format: uuid
          readOnly: true
        discountPercent:
          type: number
          format: double
          maximum: 100.0
          minimum: 0.0
          default: 0.00
        discountValue:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        priceSavePercent:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        reviewAverage:
          type: number
          format: double
          readOnly: true
        reviewCount:
          type: integer
          readOnly: true
      required:
      - absoluteUrl
      - category
      - createdAt
      - discountValue
      - finalPrice
      - id
      - likesCount
      - mainImageAbsoluteUrl
      - mainImageFilename
      - price
      - priceSavePercent
      - reviewAverage
      - reviewCount
      - slug
      - translations
      - updatedAt
      - uuid
      - vat
      - vatPercent
      - vatValue
    ProductCategory:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 255
          pattern: ^[-a-zA-Z0-9_]+$
        categoryMenuImageOneAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuImageOneFilename:
          type: string
          readOnly: true
        categoryMenuImageTwoAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuImageTwoFilename:
          type: string
          readOnly: true
        categoryMenuMainBannerAbsoluteUrl:
          type: string
          readOnly: true
        categoryMenuMainBannerFilename:
          type: string
          readOnly: true
        children:
          oneOf:
          - type: object
            additionalProperties: {}
          - type: array
            items: {}
          readOnly: true
        parent:
          type: integer
          nullable: true
        level:
          type: integer
          readOnly: true
        treeId:
          type: integer
          readOnly: true
        absoluteUrl:
          type: string
          readOnly: true
        recursiveProductCount:
          type: integer
          readOnly: true
        seoTitle:
          type: string
          nullable: true
          maxLength: 70
        seoDescription:
          type: string
          nullable: true
          maxLength: 300
        seoKeywords:
          type: string
          nullable: true
          maxLength: 255
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - absoluteUrl
      - categoryMenuImageOneAbsoluteUrl
      - categoryMenuImageOneFilename
      - categoryMenuImageTwoAbsoluteUrl
      - categoryMenuImageTwoFilename
      - categoryMenuMainBannerAbsoluteUrl
      - categoryMenuMainBannerFilename
      - children
      - createdAt
      - id
      - level
      - recursiveProductCount
      - slug
      - translations
      - treeId
      - updatedAt
      - uuid
    ProductFavourite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        product:
          type: integer
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - createdAt
      - id
      - product
      - updatedAt
      - user
      - uuid
    ProductImage:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        image:
          type: string
          format: uri
        thumbnail:
          type: string
          format: uri
          nullable: true
        isMain:
          type: boolean
          default: false
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
      required:
      - createdAt
      - id
      - image
      - mainImageAbsoluteUrl
      - mainImageFilename
      - product
      - sortOrder
      - translations
      - updatedAt
      - uuid
    ProductReview:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                comment:
                  type: string
            de:
              type: object
              properties:
                comment:
                  type: string
            el:
              type: object
              properties:
                comment:
                  type: string
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        user:
          type: integer
        rate:
          allOf:
          - $ref: '#/components/schemas/RateEnum'
          minimum: 0
          maximum: 32767
        status:
          allOf:
          - $ref: '#/components/schemas/ProductReviewStatusEnum'
          default: NEW
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        publishedAt:
          type: string
          format: date-time
          nullable: true
        isPublished:
          type: boolean
          default: false
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - createdAt
      - id
      - product
      - rate
      - translations
      - updatedAt
      - user
      - uuid
    ProductReviewStatusEnum:
      enum:
      - NEW
      - 'TRUE'
      - 'FALSE'
      type: string
      description: |-
        * `NEW` - New
        * `TRUE` - True
        * `FALSE` - False
    RateEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      type: integer
      description: |-
        * `1` - One
        * `2` - Two
        * `3` - Three
        * `4` - Four
        * `5` - Five
        * `6` - Six
        * `7` - Seven
        * `8` - Eight
        * `9` - Nine
        * `10` - Ten
    Region:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
        alpha:
          type: string
          title: Region Code
          maxLength: 10
        country:
          type: string
          title: Country Code Alpha 2
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - alpha
      - country
      - createdAt
      - sortOrder
      - translations
      - updatedAt
      - uuid
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SearchProduct:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchProductResult'
        headlines:
          type: object
          additionalProperties:
            type: string
        searchRanks:
          type: object
          additionalProperties:
            type: number
            format: double
        resultCount:
          type: integer
        similarities:
          type: object
          additionalProperties:
            type: number
            format: double
      required:
      - headlines
      - resultCount
      - results
      - searchRanks
      - similarities
    SearchProductResult:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        id:
          type: integer
        slug:
          type: string
        mainImageFilename:
          type: string
        absoluteUrl:
          type: string
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                searchDocument:
                  type: string
                searchVector:
                  type: string
                searchDocumentDirty:
                  type: string
                searchVectorDirty:
                  type: string
        searchRank:
          type: number
          format: double
          readOnly: true
        headline:
          type: string
          readOnly: true
        similarity:
          type: number
          format: double
          readOnly: true
      required:
      - absoluteUrl
      - headline
      - id
      - mainImageFilename
      - searchRank
      - similarity
      - slug
      - translations
    Settings:
      type: object
      properties:
        site:
          type: integer
        key:
          type: string
          maxLength: 255
        value:
          type: string
        valueType:
          allOf:
          - $ref: '#/components/schemas/ValueTypeEnum'
          default: str
        description:
          type: string
          nullable: true
        isPublic:
          type: boolean
          default: true
      required:
      - key
      - site
      - value
    Slide:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                subtitle:
                  type: string
                description:
                  type: string
                buttonLabel:
                  type: string
        id:
          type: integer
          readOnly: true
        slider:
          type: integer
        discount:
          type: number
          format: double
          maximum: 1000000000
          minimum: -1000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
          default: 0.00
        showButton:
          type: boolean
          default: false
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - createdAt
      - dateEnd
      - dateStart
      - id
      - mainImageAbsoluteUrl
      - mainImageFilename
      - slider
      - sortOrder
      - translations
      - updatedAt
      - uuid
    Slider:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
            de:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
            el:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
        id:
          type: integer
          readOnly: true
        mainImageAbsoluteUrl:
          type: string
          readOnly: true
        mainImageFilename:
          type: string
          readOnly: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        video:
          type: string
          format: uri
          nullable: true
      required:
      - id
      - mainImageAbsoluteUrl
      - mainImageFilename
      - translations
    SocialAccount:
      type: object
      description: serialize allauth SocialAccounts for use with a REST API
      properties:
        id:
          type: integer
          readOnly: true
        provider:
          type: string
          maxLength: 200
        uid:
          type: string
          maxLength: 191
        lastLogin:
          type: string
          format: date-time
          readOnly: true
        dateJoined:
          type: string
          format: date-time
          readOnly: true
      required:
      - dateJoined
      - id
      - lastLogin
      - provider
      - uid
    SocialConnect:
      type: object
      properties:
        accessToken:
          type: string
        code:
          type: string
        idToken:
          type: string
    SocialLogin:
      type: object
      properties:
        accessToken:
          type: string
        code:
          type: string
        idToken:
          type: string
    TOTPEnabled:
      type: object
      properties:
        enabled:
          type: boolean
          title: TOTP enabled
      required:
      - enabled
    Tip:
      type: object
      description: Serializer that saves :class:`TranslatedFieldsField` automatically.
      properties:
        translations:
          type: object
          properties:
            en:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
            de:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
            el:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                url:
                  type: string
        kind:
          $ref: '#/components/schemas/KindEnum'
        icon:
          type: string
          format: uri
          nullable: true
        active:
          type: boolean
          default: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
          nullable: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - createdAt
      - kind
      - sortOrder
      - translations
      - updatedAt
      - uuid
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UserAddress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 255
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        street:
          type: string
          maxLength: 255
        streetNumber:
          type: string
          maxLength: 255
        city:
          type: string
          maxLength: 255
        zipcode:
          type: string
          title: Zip Code
          maxLength: 255
        floor:
          nullable: true
          minimum: 0
          maximum: 32767
          oneOf:
          - $ref: '#/components/schemas/FloorEnum'
          - $ref: '#/components/schemas/NullEnum'
        locationType:
          nullable: true
          minimum: 0
          maximum: 32767
          oneOf:
          - $ref: '#/components/schemas/LocationTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone:
          type: string
        mobilePhone:
          type: string
        notes:
          type: string
          nullable: true
          maxLength: 255
        isMain:
          type: boolean
          default: false
        user:
          type: integer
        country:
          type: string
          title: Country Code Alpha 2
        region:
          type: string
          title: Region Code
      required:
      - city
      - country
      - createdAt
      - firstName
      - id
      - lastName
      - phone
      - region
      - street
      - streetNumber
      - title
      - updatedAt
      - user
      - uuid
      - zipcode
    ValueTypeEnum:
      enum:
      - str
      - int
      - bool
      - dict
      - list
      - float
      type: string
      description: |-
        * `str` - String
        * `int` - Integer
        * `bool` - Boolean
        * `dict` - Dictionary
        * `list` - List
        * `float` - Float
    Vat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: number
          format: double
          maximum: 10000000000
          minimum: -10000000000
          exclusiveMaximum: true
          exclusiveMinimum: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
      required:
      - createdAt
      - id
      - updatedAt
      - uuid
      - value
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
