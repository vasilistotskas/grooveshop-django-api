[semantic_release]
version_variable =
    setup.py:__version__,
    pyproject.toml:version
branch = "main"
upload_to_pypi = False
upload_to_release = True
build_command = "pip install poetry && poetry build"

[coverage:run]
branch = 1
omit =
    */migrations/*
    */management/*
    */manage.py
    */setup.py
    */asgi.py
    */wsgi.py
source = .
relative_files = 1

[coverage:report]
precision = 2
skip_covered = 1
fail_under = 50
show_missing = True
exclude_lines =
    pragma: no cover
    raise NotImplementedError
    return NotImplemented
    if TYPE_CHECKING:

[tool:pytest]
addopts = -n auto --record-mode=none --ds=src.tests.settings --disable-socket
testpaths = src
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
markers =
    integration

[flake8]
# Base flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
show-source = True
statistics = False
doctests = True

# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = long
docstring-style = numpy

exclude =
    .*/,
    __pycache__/,
    node_modules/,
    */migrations/
ignore = E203,H101,H238,H301,H306,W503
max-complexity = 31
max-line-length = 140

[pep8]
exclude =
    .*/,
    __pycache__/,
    node_modules/,
    */migrations/
ignore = E203,H101,H238,H301,H306,W503
max-line-length = 140

[pydocstyle]
ignore = E203, D100, D101, D102, D103, D104, D105, D106, D107, D203, D213, D407, D202
inherit = false
match-dir = src
